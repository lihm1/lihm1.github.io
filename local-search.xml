<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>perl处理vcf文件2</title>
    <link href="/2022/04/08/perl%E5%A4%84%E7%90%86vcf%E6%96%87%E4%BB%B62/"/>
    <url>/2022/04/08/perl%E5%A4%84%E7%90%86vcf%E6%96%87%E4%BB%B62/</url>
    
    <content type="html"><![CDATA[<h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs excel">vcftools<br>如何用vcftools从VCF文件中提取某条染色体信息<br>vcftools --gzvcf input.vcf --chr <span class="hljs-built_in">n</span> --recode – recode-<span class="hljs-built_in">INFO</span>-all --stdout | gzip -c &gt; output.vcf.gz<br>说明：<br>–gzvcf：处理压缩格式的vcf文件（可替换为–vcf）<br>–chr <span class="hljs-built_in">n</span>：选择染色体<span class="hljs-built_in">n</span>，例：–chr <span class="hljs-number">1</span><br>–recode：重新编码为vcf文件<br>–recode-<span class="hljs-built_in">INFO</span>-all：将输出的文件保存所有<span class="hljs-built_in">INFO</span>信息<br>–stdout：标准输出，后接管道命令<br>–gzip -c：压缩<br>&gt; output.vcf.gz：将结果输出到output.vcf.gz<br></code></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>按照染色体分离并保留header，且生成文件夹</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> strict; <br><span class="hljs-keyword">my</span> $bcftools = <span class="hljs-string">&quot;/ldfssz1/ST_CANCER/POL/SHARE/CancerPipeline/Sentieon_V1/Bin_CentOS6/bcftools-1.9&quot;</span>;<br><br><span class="hljs-keyword">my</span> $path = $ARGV[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">my</span> $varFile = $ARGV[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">my</span> $outdir = $ARGV[<span class="hljs-number">2</span>];<br><br><span class="hljs-comment">#my $path = /hwfssz5/ST_HEALTH/P18Z10200N0098/CGR/PMO/CRC/Analysis2022/02.Germline/z6_Haplotyper/01-Germutation/05-vep/;</span><br><span class="hljs-comment">##my $varFile = 15TSLC0144TR3.vqsr_pass.vep.vcf.gz ;</span><br><span class="hljs-comment">#### $ARGV[0] : input the sample file path;</span><br><span class="hljs-comment">#### $ARGV[1] : input the sample name;</span><br><br><br><span class="hljs-keyword">open</span> FH, <span class="hljs-string">&quot;$bcftools view -h $path/$varFile |&quot;</span> || <span class="hljs-keyword">die</span> $!;   <br> <span class="hljs-keyword">my</span> @filname = (<span class="hljs-keyword">split</span> <span class="hljs-regexp">/\./</span>,$varFile,<span class="hljs-number">2</span>);<br>  <span class="hljs-keyword">my</span> $samplename = @filname[<span class="hljs-number">0</span>];<br>   <span class="hljs-keyword">if</span> ($samplename)&#123;<br>        <span class="hljs-string">`mkdir -p $outdir/$samplename`</span>;<br>         &#125;<span class="hljs-keyword">else</span>&#123;<br>                  <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;please check your file&quot;</span>;<br>              &#125;<br><span class="hljs-keyword">my</span> (%normal_chr,%fh);<br><span class="hljs-keyword">my</span> @chrorder = <span class="hljs-string">qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y)</span>;<br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>        <span class="hljs-keyword">open</span>  $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125;,<span class="hljs-string">&quot;&gt;$outdir/$samplename/chr$chr.txt&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span> $!;&#125;<br><br><br><span class="hljs-keyword">while</span> (&lt;FH&gt;)&#123;<br>         <span class="hljs-keyword">chomp</span>();<br>             <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/##fileformat/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=GT/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=AD/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=DP/</span> || <span class="hljs-regexp">/##VEP/</span> || <span class="hljs-regexp">/##INFO=&lt;ID=CSQ/</span> || <span class="hljs-regexp">/#CHROM/</span> )&#123;<br>                         <span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123; <br>                                     $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125; -&gt; <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;$_\n&quot;</span>);<br>                                 &#125;<br>                             &#125;<br>                         &#125;<br><span class="hljs-keyword">open</span> IH, <span class="hljs-string">&quot;$bcftools view -H $path/$varFile |&quot;</span> || <span class="hljs-keyword">die</span> $!;   <br><span class="hljs-keyword">open</span> other,<span class="hljs-string">&quot;&gt;$outdir/$samplename/other.vcf&quot;</span> || <span class="hljs-keyword">die</span> $!;<br><br><br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>        $normal_chr&#123;<span class="hljs-string">&quot;chr$chr&quot;</span>&#125;=<span class="hljs-number">1</span> ; <br>        &#125;<br><span class="hljs-keyword">while</span>(&lt;IH&gt;)&#123;<br>        <span class="hljs-keyword">chomp</span>();<br>            <span class="hljs-keyword">my</span>  @seq = <span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>, $_ ;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">exists</span> $normal_chr&#123;$seq[<span class="hljs-number">0</span>]&#125;)&#123;<br>                <span class="hljs-keyword">print</span> $seq[<span class="hljs-number">0</span>];<br>                $fh&#123;$seq[<span class="hljs-number">0</span>]&#125;-&gt;<span class="hljs-keyword">print</span>( <span class="hljs-string">&quot;$_\n&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">print</span> other $_;&#125;<br>        &#125;<br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>    <span class="hljs-keyword">close</span> $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125;;<br>    &#125;<br><span class="hljs-keyword">close</span> other;<br><br><span class="hljs-keyword">close</span> IH;<br><br><span class="hljs-keyword">close</span> FH;<br></code></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> strict; <br><span class="hljs-keyword">my</span> $path = $ARGV[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">my</span> $varFile = $ARGV[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">my</span> $outdir = $ARGV[<span class="hljs-number">2</span>];<br><br><span class="hljs-comment">#my $path = /hwfssz5/ST_HEALTH/P18Z10200N0098/CGR/PMO/CRC/Analysis2022/02.Germline/z6_Haplotyper/01-Germutation/05-vep/;</span><br><span class="hljs-comment">###my $varFile =16TSRC0715TR3.vqsr_pass.vep.vcf.gz</span><br><br><span class="hljs-keyword">open</span> FH, <span class="hljs-string">&quot;gzip -dc $path/$varFile|&quot;</span> || <span class="hljs-keyword">die</span> $!;<br>      <br> <span class="hljs-keyword">my</span> @filname = (<span class="hljs-keyword">split</span> <span class="hljs-regexp">/\./</span>,$varFile,<span class="hljs-number">2</span>);<br>   <span class="hljs-keyword">my</span> $samplename = @filname[<span class="hljs-number">0</span>];<br>      <span class="hljs-keyword">if</span> ($samplename)&#123;<br>                  <span class="hljs-string">`mkdir -p $outdir/$samplename`</span>;<br>                           &#125;<span class="hljs-keyword">else</span>&#123;<br>                               <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;please check your file&quot;</span>;&#125;<br>                                                               <br><span class="hljs-keyword">my</span> (%normal_chr,%fh);<br><span class="hljs-keyword">my</span> @chrorder = <span class="hljs-string">qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y)</span>;<br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br><span class="hljs-keyword">open</span>  $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125;,<span class="hljs-string">&quot;&gt;$outdir/$samplename/chr$chr.txt&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span> $!;&#125;<br><span class="hljs-keyword">while</span> (&lt;FH&gt;)&#123;<br>    <span class="hljs-keyword">chomp</span>();<br>    <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/##fileformat/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=GT/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=AD/</span> || <span class="hljs-regexp">/##FORMAT=&lt;ID=DP/</span> || <span class="hljs-regexp">/##VEP/</span> || <span class="hljs-regexp">/##INFO=&lt;ID=CSQ/</span> || <span class="hljs-regexp">/#CHROM/</span> )&#123;<br>        <span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>            $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125; -&gt; <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;$_\n&quot;</span>);<br>        &#125;&#125;<br>        &#125;<br> <span class="hljs-keyword">open</span> IH, <span class="hljs-string">&quot;gzip -dc $path/$varFile |&quot;</span> || <span class="hljs-keyword">die</span> $!;   <br> <span class="hljs-keyword">open</span> other,<span class="hljs-string">&quot;&gt;$outdir/$samplename/other.vcf&quot;</span> || <span class="hljs-keyword">die</span> $!;<br> <span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>     $normal_chr&#123;<span class="hljs-string">&quot;chr$chr&quot;</span>&#125;=<span class="hljs-number">1</span> ; &#125;<br> <span class="hljs-keyword">while</span>(&lt;IH&gt;)&#123;<br>     <span class="hljs-keyword">chomp</span>();<br>     <span class="hljs-keyword">my</span> @seq = <span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>, $_ ;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">exists</span> $normal_chr&#123;$seq[<span class="hljs-number">0</span>]&#125;)&#123;<br>         <span class="hljs-keyword">print</span> $seq[<span class="hljs-number">0</span>];<br>         $fh&#123;$seq[<span class="hljs-number">0</span>]&#125;-&gt;<span class="hljs-keyword">print</span>( <span class="hljs-string">&quot;$_\n&quot;</span>);&#125;<span class="hljs-keyword">else</span>&#123;<br>          <span class="hljs-keyword">print</span> other $_;&#125;<br>  &#125;<br>  <br>  <br>  <span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br>      <span class="hljs-keyword">close</span> $fh&#123;<span class="hljs-string">&quot;chr&quot;</span>.$chr&#125;;<br>    &#125;<br><br>    <br>    <span class="hljs-keyword">close</span> other;<br>    <span class="hljs-keyword">close</span> IH;<br>    <span class="hljs-keyword">close</span> FH;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>charger</title>
    <link href="/2022/04/06/charger/"/>
    <url>/2022/04/06/charger/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>danseq-1</title>
    <link href="/2022/04/06/danseq-1/"/>
    <url>/2022/04/06/danseq-1/</url>
    
    <content type="html"><![CDATA[<p>原始数据的处理流程：<br>主要用来记录，代码偏多，解释很少，方便自己后面使用</p><h3 id="STEP-1-数据清洗"><a href="#STEP-1-数据清洗" class="headerlink" title="STEP_1.数据清洗"></a>STEP_1.数据清洗</h3><p>下机数据的格式为fastq的格式，我们可以先查看数据排序是否一致：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gunzip -c test.fq.gz | <span class="hljs-built_in">paste</span> - - - - | <span class="hljs-built_in">cut</span> -f 1| <span class="hljs-built_in">head</span><br></code></pre></td></tr></table></figure><p>进行数据清洗的工具：Soapnuke</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SOAPnuke2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">7</span> filter -<span class="hljs-number">1</span> test_1.fq.gz -<span class="hljs-number">2</span> test_2.fq.gz -l <span class="hljs-number">5</span> -q <span class="hljs-number">0</span>.<span class="hljs-number">5</span> -n <span class="hljs-number">0</span>.<span class="hljs-number">1</span> -f adapter1 -r adapter2 -Q <span class="hljs-number">2</span>  -G <span class="hljs-number">2</span> --seqType <span class="hljs-number">0</span> -o <span class="hljs-number">01</span>-clean  -C test_1.clean.fq.gz -D test_2.clean.fq.gz<br></code></pre></td></tr></table></figure><p>工具参数：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs vim">-<span class="hljs-keyword">f</span>, –adapter1  : <span class="hljs-symbol">&lt;s&gt;</span> <span class="hljs-number">3</span>′ adapter sequence of fq1 <span class="hljs-keyword">file</span><br><br>-r, –adapter2  : <span class="hljs-symbol">&lt;s&gt;</span> <span class="hljs-number">5</span>′ adapter sequence of fq2 <span class="hljs-keyword">file</span> [<span class="hljs-keyword">only</span> <span class="hljs-keyword">for</span> PE reads]<br><br>-<span class="hljs-number">1</span>, –fq1       : <span class="hljs-symbol">&lt;s&gt;</span> fq1 <span class="hljs-keyword">file</span><br><br>-<span class="hljs-number">2</span>, –fq2       : <span class="hljs-symbol">&lt;s&gt;</span> fq2 <span class="hljs-keyword">file</span>, used <span class="hljs-keyword">to</span> <span class="hljs-keyword">pe</span><br><br>–tile          : <span class="hljs-symbol">&lt;s&gt;</span> tile <span class="hljs-keyword">number</span> <span class="hljs-keyword">to</span> ignore reads , such <span class="hljs-keyword">as</span> [<span class="hljs-number">1101</span>-<span class="hljs-number">1104</span>,<span class="hljs-number">1205</span>]<br>-M, –misMatch  : <span class="hljs-symbol">&lt;i&gt;</span> the <span class="hljs-built_in">max</span> mismatch <span class="hljs-keyword">number</span> when <span class="hljs-keyword">match</span> the adapter (default: [<span class="hljs-number">1</span>])<br><br>-A, –matchRatio: <span class="hljs-symbol">&lt;f&gt;</span> adapter’s shortest <span class="hljs-keyword">match</span> ratio(default: [<span class="hljs-number">0.5</span>])<br><br>-<span class="hljs-keyword">l</span>, –lowQual   : <span class="hljs-symbol">&lt;i&gt;</span> low quality threshold (default: [<span class="hljs-number">5</span>])<br><br>-q, –qualRate  : <span class="hljs-symbol">&lt;f&gt;</span> low quality rate (default: [<span class="hljs-number">0.5</span>])<br><br>-n, –nRate     : <span class="hljs-symbol">&lt;f&gt;</span> <span class="hljs-keyword">N</span> rate threshold (default: [<span class="hljs-number">0.05</span>])<br><br>-<span class="hljs-keyword">m</span>, –mean      : <span class="hljs-symbol">&lt;f&gt;</span> <span class="hljs-built_in">filter</span> reads with low average quality, (&lt;)<br><br>-<span class="hljs-keyword">p</span>, –polyA     : <span class="hljs-symbol">&lt;f&gt;</span> <span class="hljs-built_in">filter</span> poly A, percent of A, <span class="hljs-number">0</span> means <span class="hljs-keyword">do</span> not <span class="hljs-built_in">filter</span> (default: [ <span class="hljs-number">0</span> ])<br><br>-d, –rmdup     : <span class="hljs-symbol">&lt;b&gt;</span> <span class="hljs-built_in">remove</span> PCR duplications<br><br>-i, –<span class="hljs-built_in">index</span>     : <span class="hljs-symbol">&lt;b&gt;</span> <span class="hljs-built_in">remove</span> <span class="hljs-built_in">index</span><br><br>-<span class="hljs-keyword">c</span>, –cut       : <span class="hljs-symbol">&lt;f&gt;</span> the <span class="hljs-keyword">read</span> <span class="hljs-keyword">number</span> you want <span class="hljs-keyword">to</span> keep in each clean fq <span class="hljs-keyword">file</span> (uni<span class="hljs-variable">t:1024</span>*<span class="hljs-number">1024</span>, <span class="hljs-number">0</span> means not cut reads)<br><br>-t, –trim      : <span class="hljs-symbol">&lt;s&gt;</span> trim some <span class="hljs-keyword">bp</span> of the <span class="hljs-keyword">read</span>’s head <span class="hljs-built_in">and</span> tail, they means:<br><br>read1’s head <span class="hljs-built_in">and</span> tail <span class="hljs-built_in">and</span> read2’s head <span class="hljs-built_in">and</span> tail(default: [ <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span> ])<br><br>-S, –small     : <span class="hljs-symbol">&lt;b&gt;</span> <span class="hljs-built_in">filter</span> the small <span class="hljs-keyword">insert</span> size<br>-O, –overlap   : <span class="hljs-symbol">&lt;i&gt;</span> minimun <span class="hljs-keyword">match</span> length (default: [ <span class="hljs-number">10</span> ])<br>-<span class="hljs-keyword">P</span>, –mis       : <span class="hljs-symbol">&lt;f&gt;</span> the maximum miss <span class="hljs-keyword">match</span> ratio (default: [ <span class="hljs-number">0.1</span> ])<br>-Q, –qualSys   : <span class="hljs-symbol">&lt;i&gt;</span> quality <span class="hljs-built_in">system</span> <span class="hljs-number">1</span>:illumina, <span class="hljs-number">2</span>:sanger (default: [ <span class="hljs-number">1</span> ])<br><br>-L, –read1Len  : <span class="hljs-symbol">&lt;i&gt;</span> read1 <span class="hljs-built_in">max</span> length (default: <span class="hljs-keyword">all</span> read1’s length are equal, <span class="hljs-built_in">and</span> auto acquire)<br><br>-I, –read2Len  : <span class="hljs-symbol">&lt;i&gt;</span> read2 <span class="hljs-built_in">max</span> length (default: <span class="hljs-keyword">all</span> read2’s length are equal, <span class="hljs-built_in">and</span> auto acquire)<br><br>-G, –sanger    : <span class="hljs-symbol">&lt;b&gt;</span> <span class="hljs-keyword">set</span> clean data qualtiy <span class="hljs-built_in">system</span> <span class="hljs-keyword">to</span> sanger (default: illumina)<br><br>-<span class="hljs-keyword">a</span>, –<span class="hljs-keyword">append</span>    : <span class="hljs-symbol">&lt;s&gt;</span> the <span class="hljs-built_in">log</span>’s output place : console <span class="hljs-built_in">or</span> <span class="hljs-keyword">file</span> (default: [console])<br><br>-<span class="hljs-keyword">o</span>, –outDir    : <span class="hljs-symbol">&lt;s&gt;</span> output directory, directory must <span class="hljs-built_in">exists</span> (default: current directory)<br><br>-C, –cleanFq1  : <span class="hljs-symbol">&lt;s&gt;</span> clean fq1 <span class="hljs-keyword">file</span> name<br><br>-D, –cleanFq2  : <span class="hljs-symbol">&lt;s&gt;</span> clean fq2 <span class="hljs-keyword">file</span> name<br><br>-E, –cutAdaptor: <span class="hljs-symbol">&lt;i&gt;</span> cut sequence from adaptor <span class="hljs-built_in">index</span>,unless performed -<span class="hljs-keyword">f</span>/-r also in use,discard the <span class="hljs-keyword">read</span> when the adaptor <span class="hljs-built_in">index</span> of the <span class="hljs-keyword">read</span> <span class="hljs-keyword">is</span> less than INT<br><br>-<span class="hljs-keyword">b</span>, –BaseNum   : <span class="hljs-symbol">&lt;i&gt;</span> the base <span class="hljs-keyword">number</span> you want <span class="hljs-keyword">to</span> keep in each clean fq <span class="hljs-keyword">file</span>,unless performed -E also in use<br><br>-R, –rawFq1    : <span class="hljs-symbol">&lt;s&gt;</span> raw fq1 <span class="hljs-keyword">file</span> name<br><br>-W, –rawFq2    : <span class="hljs-symbol">&lt;s&gt;</span> raw fq2 <span class="hljs-keyword">file</span> name<br><br>-<span class="hljs-number">5</span>, –seqType   : <span class="hljs-symbol">&lt;i&gt;</span> Sequence fq name <span class="hljs-built_in">type</span>, <span class="hljs-number">0</span>-&gt;old fastq name, <span class="hljs-number">1</span>-&gt;<span class="hljs-keyword">new</span> fastq name[default: <span class="hljs-number">0</span>]<br><br>old fastq name: [@FCD1PB1ACXX](https://weibo.<span class="hljs-keyword">com</span>/n/FCD1PB1ACXX):<span class="hljs-number">4</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">1799</span>:<span class="hljs-number">2201</span>#GAAGCACG/<span class="hljs-number">2</span><br><br><span class="hljs-keyword">new</span> fastq name: [@HISEQ](https://weibo.<span class="hljs-keyword">com</span>/n/HISEQ):<span class="hljs-number">310</span>:C5MH9ANXX:<span class="hljs-number">1</span>:<span class="hljs-number">1101</span>:<span class="hljs-number">3517</span>:<span class="hljs-number">2043</span> <span class="hljs-number">2</span>:<span class="hljs-keyword">N</span>:<span class="hljs-number">0</span>:TCGGTCAC<br><br>-<span class="hljs-number">6</span>, –polyAType : <span class="hljs-symbol">&lt;i&gt;</span> <span class="hljs-built_in">filter</span> poly A <span class="hljs-built_in">type</span>, <span class="hljs-number">0</span>-&gt;both two reads are poly <span class="hljs-keyword">a</span>, <span class="hljs-number">1</span>-&gt;at least one reads <span class="hljs-keyword">is</span> poly <span class="hljs-keyword">a</span>, then <span class="hljs-built_in">filter</span>, [default: <span class="hljs-number">0</span>]<br><br>-<span class="hljs-number">7</span>, –outType: <span class="hljs-symbol">&lt;i&gt;</span> Add /<span class="hljs-number">1</span>, /<span class="hljs-number">2</span> at the end of fastq name, <span class="hljs-number">0</span>:not <span class="hljs-built_in">add</span>, <span class="hljs-number">1</span>:<span class="hljs-built_in">add</span> [default: <span class="hljs-number">0</span>]<br><br>-h, –<span class="hljs-keyword">help</span>      : <span class="hljs-symbol">&lt;b&gt;</span> <span class="hljs-keyword">help</span><br><br>-v, –<span class="hljs-keyword">version</span>   : <span class="hljs-symbol">&lt;b&gt;</span> show <span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p>主要功能：<br>● 主要功能：去adapter，index，read头尾剪切，低quality过滤，高比例N过滤。<br>● 使用平台：HiSeq2000, HiSeq 2500, HiSeq4000,HiSeqXTen,Zebra<br>● 测序策略：PE&#x2F;SE </p><h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><p>我们可以看到得到的文件如下：<br><img src="https://s2.loli.net/2022/04/06/fNqRSjle9s28wpK.png"></p><h3 id="STEP-2-数据质控"><a href="#STEP-2-数据质控" class="headerlink" title="STEP_2:数据质控"></a>STEP_2:数据质控</h3><p>fqcheck也是一款常用的质控工具，但是它的质控结果并没有做可视化，而是直接输出一个文本文件，记录质控项结果，通常需要使用R或python或perl进行可视化。相比于fastqc，fqcheck可以接受pair-end的数据进行质控<br>软件位置：$fqcheck ||&#x3D; “$BIN&#x2F;fqcheck33”</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">fqcheck  -r <span class="hljs-number">01</span>-clean/test_1<span class="hljs-selector-class">.clean</span><span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> -c <span class="hljs-number">02</span>-fqcheck/test-<span class="hljs-number">1</span><span class="hljs-selector-class">.clean</span>.fqcheck<br></code></pre></td></tr></table></figure><p>输出结果：<br>包含有：总reads数，总碱基数，reads最大长度，reads平均长度，各个位置的碱基质量值分布，ATCG四种碱基的比例，GC含量，Q20，Q30等。</p><h3 id="STEP-3-sentieon"><a href="#STEP-3-sentieon" class="headerlink" title="STEP_3:sentieon"></a>STEP_3:sentieon</h3><p>后面的步骤用的华大开发的sentieon，参考文档：<a href="https://support.sentieon.com/manual/DNAseq_usage/dnaseq/">https://support.sentieon.com/manual/DNAseq_usage/dnaseq/</a></p><h4 id="3-1-BWA比对"><a href="#3-1-BWA比对" class="headerlink" title="3.1 BWA比对"></a>3.1 BWA比对</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Sentieon bwa mem -M -t <span class="hljs-number">40</span> -R <span class="hljs-string">&quot;@RG\\tID:sampleID\\tLB:$KA\\tPU:sample\\tSM:135T-KAPA\\tPL:COMPLETE_GENOMICS\\tCN:BGI&quot;</span> Homo_sapiens_assembly38<span class="hljs-selector-class">.fasta</span> <span class="hljs-number">01</span>-clean/test_1<span class="hljs-selector-class">.clean</span><span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> <span class="hljs-number">01</span>-clean/test_2<span class="hljs-selector-class">.clean</span><span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> -o <span class="hljs-number">03</span>-sentieon/test-lane_barcode<span class="hljs-selector-class">.sorted</span>.bam<br></code></pre></td></tr></table></figure><h4 id="3-2-Calculate-data-metrics-（WGS"><a href="#3-2-Calculate-data-metrics-（WGS" class="headerlink" title="3.2 Calculate data metrics （WGS)"></a>3.2 Calculate data metrics （WGS)</h4><p>A single command is run to generate 5 statistical summaries of the data quality and the pipeline data analysis quality results.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus">SentieonAuto driver -t <span class="hljs-number">4</span> <br>-r Homo_sapiens_assembly38<span class="hljs-selector-class">.fasta</span><br>-<span class="hljs-selector-tag">i</span> <span class="hljs-number">03</span>-sentieon/test-lane_barcode<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.bam</span> <br><span class="hljs-attr">--algo</span> GCBias <br><span class="hljs-attr">--summary</span> <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.GC_SUMMARY</span><span class="hljs-selector-class">.txt</span> <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.GC_METRIC</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> MeanQualityByCycle <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.MQ_METRIC</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> QualDistribution <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.QD_METRIC</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> InsertSizeMetricAlgo <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.IS_METRIC</span><span class="hljs-selector-class">.txt</span><br><span class="hljs-attr">--algo</span> AlignmentStat <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.ALN_METRIC</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> WgsMetricsAlgo <span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.WGS_METRIC</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> SequenceArtifactMetricsAlgo <br><span class="hljs-attr">--dbsnp</span> dbsnp_151<span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span> <br><span class="hljs-number">04</span>-sentieonauto/test<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.total</span><span class="hljs-selector-class">.ARTIFACT_METRICS_BASE</span>.txt<br></code></pre></td></tr></table></figure><h4 id="3-3-Remove-or-mark-duplicates"><a href="#3-3-Remove-or-mark-duplicates" class="headerlink" title="3.3 Remove or mark duplicates"></a>3.3 Remove or mark duplicates</h4><p>分两步</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Sentieon driver -t <span class="hljs-number">8</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">03</span>-sentieon/test-lane_barcode<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.bam</span> <span class="hljs-attr">--algo</span> LocusCollector <span class="hljs-attr">--fun</span> score_info  <span class="hljs-number">05</span>-makdup/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.score</span><span class="hljs-selector-class">.txt</span><span class="hljs-selector-class">.gz</span><br><br>Sentieon driver -t <span class="hljs-number">8</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">03</span>-sentieon/test-lane_barcode<span class="hljs-selector-class">.sorted</span><span class="hljs-selector-class">.bam</span> <span class="hljs-attr">--algo</span> Dedup <span class="hljs-attr">--score_info</span> <span class="hljs-number">05</span>-makdup/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.score</span><span class="hljs-selector-class">.txt</span><span class="hljs-selector-class">.gz</span> <span class="hljs-attr">--metrics</span> <span class="hljs-number">05</span>-makdup/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.metrics</span><span class="hljs-selector-class">.txt</span>  <span class="hljs-number">05</span>-makdup/test-lane_barcode<span class="hljs-selector-class">.mkdup</span>.bam<br></code></pre></td></tr></table></figure><h4 id="3-4-Indel-realignment-optional"><a href="#3-4-Indel-realignment-optional" class="headerlink" title="3.4 Indel realignment (optional)"></a>3.4 Indel realignment (optional)</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">SentieonAuto driver -t <span class="hljs-number">8</span> -r Homo_sapiens_assembly38<span class="hljs-selector-class">.fasta</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">05</span>-makdup/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.bam</span> <span class="hljs-attr">--algo</span> Realigner -k <span class="hljs-number">1000</span>G_phase1<span class="hljs-selector-class">.snps</span><span class="hljs-selector-class">.high_confidence</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span> -k Mills_and_1000G_gold_standard<span class="hljs-selector-class">.indels</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <span class="hljs-number">06</span>-realign/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.realn</span>.bam<br></code></pre></td></tr></table></figure><h4 id="3-5-Base-quality-score-recalibration（WGS"><a href="#3-5-Base-quality-score-recalibration（WGS" class="headerlink" title="3.5 Base quality score recalibration（WGS)"></a>3.5 Base quality score recalibration（WGS)</h4><p>bqsr &amp; snp, indel calling<br>BQSR 全称叫做 Base Quality Score Recalibration， 可以理解为碱基质量校正。对于变异位点的鉴定，碱基质量是非常重要的。比如测序识别到的一个位点，其碱基和参考基因组上的碱基不同，但是其质量值特别低，此时可以认为是一个测序错误，而不是一个SNP位点。<br>在测序的原始数据中，本身就提供了每个碱基对应的质量值，但是GATK官方认为测序仪提供的碱基质量值，是不准确的，存在误差的。<br>某个位点前后的碱基的种类，称之为上下文环境，会对这个碱基的质量值产生影响。对于A,T,C,G 4种碱基，共有4 x 4 &#x3D;16 种上下文环境，左侧的图是利用fastq文件中测序仪给出的碱基质量值做的图，可以看到，对于不同的上下文环境，碱基质量值分布不同；右图为经过BQSR校正之后，不同上下文环境中碱基质量的分布。可以看到，校正之后，不同的上下文环境的碱基质量分布基本相同。也就是说，BQSR消除了上下文环境对碱基质量的影响。<br><a href="https://cloud.tencent.com/developer/article/1626269">https://cloud.tencent.com/developer/article/1626269</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Sentieon driver -t <span class="hljs-number">8</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">06</span>-realign/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.realn</span><span class="hljs-selector-class">.bam</span><br>-r Homo_sapiens_assembly38<span class="hljs-selector-class">.fasta</span> <br><span class="hljs-attr">--algo</span> QualCal <br>-k dbsnp_151<span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br>-k <span class="hljs-number">1000</span>G_phase1<span class="hljs-selector-class">.snps</span><span class="hljs-selector-class">.high_confidence</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br>-k Mills_and_1000G_gold_standard<span class="hljs-selector-class">.indels</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br><span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_PRE</span><span class="hljs-selector-class">.txt</span><br><br>Sentieon driver -t <span class="hljs-number">8</span> <br>-r Homo_sapiens_assembly38<span class="hljs-selector-class">.fasta</span> <br>-<span class="hljs-selector-tag">i</span> <span class="hljs-number">06</span>-realign/test-lane_barcode<span class="hljs-selector-class">.mkdup</span><span class="hljs-selector-class">.realn</span><span class="hljs-selector-class">.bam</span> <br>-<span class="hljs-selector-tag">q</span> <span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_PRE</span><span class="hljs-selector-class">.txt</span> <span class="hljs-attr">--algo</span> QualCal <br>-k dbsnp_151<span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br>-k <span class="hljs-number">1000</span>G_phase1<span class="hljs-selector-class">.snps</span><span class="hljs-selector-class">.high_confidence</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br>-k Mills_and_1000G_gold_standard<span class="hljs-selector-class">.indels</span><span class="hljs-selector-class">.hg38</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>  <br><span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_POST</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-attr">--algo</span> ReadWriter <span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.bam</span> <br><span class="hljs-attr">--algo</span> Haplotyper <br>-d test<span class="hljs-selector-class">.Haplotyper</span><span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span>     ##<span class="hljs-selector-id">#Genotyper</span>, Haplotyper: used <span class="hljs-keyword">for</span> germline variant calling analysis.<br><br>Sentieon driver -t <span class="hljs-number">8</span>  <span class="hljs-attr">--algo</span> QualCal <span class="hljs-attr">--plot</span> <br><span class="hljs-attr">--before</span> <span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_PRE</span><span class="hljs-selector-class">.txt</span> <span class="hljs-attr">--after</span> <span class="hljs-number">07</span>-BQSR/<span class="hljs-number">135</span>T-KAPA<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_POST</span><span class="hljs-selector-class">.txt</span> <br><span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_RESULT</span><span class="hljs-selector-class">.csv</span><br><br>Sentieon plot QualCal -o <span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_RESULT</span><span class="hljs-selector-class">.pdf</span>  <br><span class="hljs-number">07</span>-BQSR/test<span class="hljs-selector-class">.bqsr</span><span class="hljs-selector-class">.RECAL_RESULT</span>.csv<br></code></pre></td></tr></table></figure><h5 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h5><p><img src="https://s2.loli.net/2022/04/06/vOYlDhAC4qa859u.png"></p><h4 id="germline-mutation-calling"><a href="#germline-mutation-calling" class="headerlink" title="germline mutation calling"></a>germline mutation calling</h4><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><br><br><span class="hljs-comment">####VARcal SNP</span><br><br><br><br>/ldfssz1/ST_BIGDATA/USER/st_bigdata/Sentieon/SentieonPre10.<span class="hljs-number">02</span> driver <span class="hljs-string">\</span><br>-r Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>--algo VarCal <span class="hljs-string">\</span><br>-v $path<span class="hljs-regexp">/Haplotyper/</span>&lt;sample&gt;.Haplotyper.vcf.gz <span class="hljs-string">\</span><br>--resource hapmap_3.<span class="hljs-number">3.hg</span>38.vcf.gz <span class="hljs-string">\</span><br>--resource_param hapmap,known=<span class="hljs-literal">false</span>,training=<span class="hljs-literal">true</span>,truth=<span class="hljs-literal">true</span>,prior=<span class="hljs-number">15.0</span> <span class="hljs-string">\</span><br>--resource <span class="hljs-number">1000</span>G_omni2.<span class="hljs-number">5.hg</span>38.vcf.gz <span class="hljs-string">\</span><br>--resource_param omni,known=<span class="hljs-literal">false</span>,training=<span class="hljs-literal">true</span>,truth=<span class="hljs-literal">true</span>,prior=<span class="hljs-number">12.0</span> <span class="hljs-string">\</span><br>--resource <span class="hljs-number">1000</span>G_phase1.snps.high_confidence.hg38.vcf.gz <span class="hljs-string">\</span><br>--resource_param <span class="hljs-number">1000</span>G,known=<span class="hljs-literal">false</span>,training=<span class="hljs-literal">true</span>,truth=<span class="hljs-literal">false</span>,prior=<span class="hljs-number">10.0</span> <span class="hljs-string">\</span><br>--resource dbsnp_b151_GRCh38p7_GATK.vcf.gz <span class="hljs-string">\</span><br>--resource_param dbsnp,known=<span class="hljs-literal">true</span>,training=<span class="hljs-literal">false</span>,truth=<span class="hljs-literal">false</span>,prior=<span class="hljs-number">2.0</span> --annotation DP <span class="hljs-string">\</span><br>--annotation QD --annotation FS --annotation SOR --annotation MQ --annotation MQRankSum <span class="hljs-string">\</span><br>--annotation ReadPosRankSum <span class="hljs-string">\</span><br>--var_type SNP <span class="hljs-string">\</span><br>--plot_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.plotfile <span class="hljs-string">\</span><br>--tranches_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.tranches <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.recal &amp;&amp; <span class="hljs-string">\</span><br><br><br><br><br><span class="hljs-comment">####applyVARcal SNP</span><br>SentieonPre10.<span class="hljs-number">02</span>  driver <span class="hljs-string">\</span><br>-r Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>--algo ApplyVarCal -v $path<span class="hljs-regexp">/Haplotyper/</span>&lt;sample&gt;.Haplotyper.vcf.gz <span class="hljs-string">\</span><br>--var_type SNP <span class="hljs-string">\</span><br>--tranches_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.tranches <span class="hljs-string">\</span><br>--sensitivity <span class="hljs-number">99.0</span> <span class="hljs-string">\</span><br>--recal $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.recal <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/01-snpvcf/</span>&lt;sample&gt;.Haplotyper.snp.recaled.vcf.gz &amp;&amp; <span class="hljs-string">\</span><br><br><br>Sentieon plot <span class="hljs-string">\</span><br>vqsr -o $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.vqsr.SNP.pdf <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.snp.plotfile &amp;&amp;<span class="hljs-string">\</span><br><br><span class="hljs-comment">####VARcal INDEL</span><br><br>/ldfssz1/ST_BIGDATA/USER/st_bigdata/Sentieon/SentieonPre10.<span class="hljs-number">02</span>  driver <span class="hljs-string">\</span><br>-r Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>--algo VarCal <span class="hljs-string">\</span><br>-v $path<span class="hljs-regexp">/Haplotyper/</span>&lt;sample&gt;.Haplotyper.vcf.gz <span class="hljs-string">\</span><br>--resource Mills_and_1000G_gold_standard.indels.hg38.vcf.gz <span class="hljs-string">\</span><br>--resource_param Mills,known=<span class="hljs-literal">false</span>,training=<span class="hljs-literal">true</span>,truth=<span class="hljs-literal">true</span>,prior=<span class="hljs-number">12.0</span> <span class="hljs-string">\</span><br>--resource Axiom_Exome_Plus.genotypes.all_populations.poly.hg38.vcf.gz <span class="hljs-string">\</span><br>--resource_param axiomPoly,known=<span class="hljs-literal">false</span>,training=<span class="hljs-literal">true</span>,truth=<span class="hljs-literal">false</span>,prior=<span class="hljs-number">10.0</span> <span class="hljs-string">\</span><br>--resource dbsnp_b151_GRCh38p7_GATK.vcf.gz <span class="hljs-string">\</span><br>--resource_param dbsnp,known=<span class="hljs-literal">true</span>,training=<span class="hljs-literal">false</span>,truth=<span class="hljs-literal">false</span>,prior=<span class="hljs-number">2.0</span> <span class="hljs-string">\</span><br>--annotation QD --annotation DP --annotation FS <span class="hljs-string">\</span><br>--annotation SOR --annotation MQ --annotation ReadPosRankSum <span class="hljs-string">\</span><br>--var_type INDEL <span class="hljs-string">\</span><br>--max_gaussians <span class="hljs-number">4</span> <span class="hljs-string">\</span><br>--plot_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.plotfile <span class="hljs-string">\</span><br>--tranches_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.tranches <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.recal &amp;&amp; <span class="hljs-string">\</span><br><br><br><span class="hljs-comment">####applyVARcal INDEL</span><br>SentieonPre10.<span class="hljs-number">02</span>  driver <span class="hljs-string">\</span><br>-r Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>--algo ApplyVarCal -v $path<span class="hljs-regexp">/Haplotyper/</span>&lt;sample&gt;.Haplotyper.vcf.gz <span class="hljs-string">\</span><br>--var_type INDEL <span class="hljs-string">\</span><br>--tranches_file $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.tranches <span class="hljs-string">\</span><br>--sensitivity <span class="hljs-number">99.0</span> <span class="hljs-string">\</span><br>--recal $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.recal <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/02-indel/</span>&lt;sample&gt;.Haplotyper.indel.recaled.vcf.gz &amp;&amp;<span class="hljs-string">\</span><br><br><br><span class="hljs-comment">##</span><br>Sentieon/SentieonPre10.<span class="hljs-number">02</span>  plot <span class="hljs-string">\</span><br>vqsr -o $path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.vqsr.indel.pdf <span class="hljs-string">\</span><br>$path<span class="hljs-regexp">/01-Germutation/</span>&lt;sample&gt;.Haplotyper.indel.plotfile &amp;&amp;<span class="hljs-string">\</span><br><br><span class="hljs-comment">#### merge</span><br>GATK/gatk-<span class="hljs-number">4.1</span>.<span class="hljs-number">0.0</span>/gatk <span class="hljs-string">\</span><br>MergeVcfs <span class="hljs-string">\</span><br>-I $path<span class="hljs-regexp">/01-Germutation/02-indel/</span>&lt;sample&gt;.Haplotyper.indel.recaled.vcf.gz  <span class="hljs-string">\</span><br>-I $path<span class="hljs-regexp">/01-Germutation/01-snpvcf/</span>&lt;sample&gt;.Haplotyper.snp.recaled.vcf.gz  <span class="hljs-string">\</span><br>-O $path<span class="hljs-regexp">/01-Germutation/03-merge/</span>&lt;sample&gt;.Haplotyper.snp_indel.recaled.vcf.gz &amp;&amp;<span class="hljs-string">\</span><br><br><span class="hljs-comment">#### Filter</span><br><br>zcat $path<span class="hljs-regexp">/01-Germutation/03-merge/</span>&lt;sample&gt;.Haplotyper.snp_indel.recaled.vcf.gz<span class="hljs-string">\</span><br>|awk <span class="hljs-string">&#x27;$1~/^#/ || $7==&quot;PASS&quot; &#123;print&#125;&#x27;</span> |<span class="hljs-string">\</span><br>bcftools-<span class="hljs-number">1.9</span> norm <span class="hljs-string">\</span><br>-m-both <span class="hljs-string">\</span><br>-f Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>-o $path<span class="hljs-regexp">/01-Germutation/04-passvcf/</span>&lt;sample&gt;.vqsr_pass.vcf.gz -O z - &amp;&amp;<span class="hljs-string">\</span><br><br><span class="hljs-comment">#####VEP annotation</span><br><br><span class="hljs-keyword">export</span> PATH=<span class="hljs-string">&quot;/share/app/perl-5.22.0/bin:$PATH&quot;</span><br><span class="hljs-keyword">export</span> PERL5LIB=<span class="hljs-string">&quot;/share/app/vcftools-0.1.13/lib/perl5/site_perl:$PERL5LIB&quot;</span><br>VEP/v102/bin/vep <span class="hljs-string">\</span><br>--cache --dir_cache VEP/Caches <span class="hljs-string">\</span><br>--fasta Homo_sapiens_assembly38.fasta <span class="hljs-string">\</span><br>--assembly GRCh38 --offline --everything --af_exac <span class="hljs-string">\</span><br>--format vcf --vcf <span class="hljs-string">\</span><br>--input_file $path/test.vqsr_pass.vcf.gz <span class="hljs-string">\</span><br>--output_file $path/test.vqsr_pass.vep.vcf <span class="hljs-string">\</span><br>--stats_file $path/test.vqsr_pass._summary<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>bioinformation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>perl处理vcf文件</title>
    <link href="/2022/04/02/perl%E5%A4%84%E7%90%86vcf%E6%96%87%E4%BB%B6/"/>
    <url>/2022/04/02/perl%E5%A4%84%E7%90%86vcf%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>最近尝试着用perl处理vcf文件得到自己想要的内容，在这里做个总结。</p><h3 id="1-向vcf文件添加一列："><a href="#1-向vcf文件添加一列：" class="headerlink" title="1.向vcf文件添加一列："></a>1.向vcf文件添加一列：</h3><p>提取vep注释后的vcf中的样本名并将样本名添加到文件的每条染色体后面<br>解决思路：<br>读入文件，join ;push ;</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!user/bin/perl</span><br><br><span class="hljs-keyword">use</span> strict;<br><span class="hljs-keyword">my</span> $bcftools = <span class="hljs-string">&quot;bcftools-1.9&quot;</span>;<br><span class="hljs-keyword">my</span> $varFile = <span class="hljs-string">&quot;vqsr_pass.vep.vcf&quot;</span>;<br><br><span class="hljs-keyword">my</span>(@name,$samplename);<br>    <span class="hljs-keyword">open</span> IH, <span class="hljs-string">&quot;$bcftools view -h $varFile |&quot;</span> || <span class="hljs-keyword">die</span> $!;<br>    <span class="hljs-keyword">open</span> VCF, <span class="hljs-string">&quot;&gt;vctout&quot;</span>;<br>    <span class="hljs-keyword">while</span>(&lt;IH&gt;)&#123;<br>        <span class="hljs-keyword">chomp</span>();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/^#CHROM/</span>)&#123;<br>            @name = <span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>,$_;<br>            $samplename = @name[<span class="hljs-number">9</span>]<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">print</span> $samplename;<br><br><span class="hljs-keyword">open</span> FA, <span class="hljs-string">&quot;$bcftools view -H $varFile |&quot;</span> || <span class="hljs-keyword">die</span> $!;<br><span class="hljs-keyword">while</span> (&lt;FA&gt;)&#123;<br>    <span class="hljs-keyword">chomp</span>();<br>    <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/^#/</span>)&#123;<br>        <span class="hljs-keyword">next</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">my</span> @seq = <span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>, $_;<br>        <span class="hljs-keyword">my</span> ($chr, $pos, $ID, $REF, $ALT, $QUAL, $FILTER, $INFO, $FORMAT) = @seq[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<span class="hljs-number">7</span>, <span class="hljs-number">8</span>];<br>        <span class="hljs-keyword">my</span> $FORMAT = <span class="hljs-keyword">join</span> (<span class="hljs-string">&quot;,&quot;</span>,@seq[<span class="hljs-number">8</span>],@seq[<span class="hljs-number">9</span>]);<br>        <span class="hljs-keyword">print</span> VCF <span class="hljs-keyword">join</span> (<span class="hljs-string">&quot;\t&quot;</span>,$chr, $pos, $ID, $REF, $ALT, $QUAL, $FILTER, $INFO, $FORMAT,$samplename), <span class="hljs-string">&quot;\n&quot;</span>;    &#125;<br>&#125;  <br><span class="hljs-keyword">close</span> FA;<br><span class="hljs-keyword">close</span> VCF;<br><span class="hljs-keyword">close</span> IH;<br></code></pre></td></tr></table></figure><h3 id="2-读取vcf文件"><a href="#2-读取vcf文件" class="headerlink" title="2.读取vcf文件"></a>2.读取vcf文件</h3><p>保留#CHROM 这一行</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!user/bin/perl</span><br><br><span class="hljs-keyword">use</span> strict;<br><br><span class="hljs-keyword">open</span> VCF,<span class="hljs-string">&quot;&lt;$ARGV[0]&quot;</span>;<br><span class="hljs-keyword">open</span> OUT,<span class="hljs-string">&quot;&gt;mmary.txt&quot;</span>;<br><br><span class="hljs-keyword">my</span> @linelist=&lt;VCF&gt;;<br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $eachline(@linelist)&#123;<br><span class="hljs-keyword">if</span> ($eachline=~<span class="hljs-regexp">/^##/</span>)&#123;<br><span class="hljs-keyword">next</span>;&#125;<br><span class="hljs-keyword">elsif</span>($eachline=~<span class="hljs-regexp">/^#CHROM/</span>)&#123;<br>  $eachline =~ <span class="hljs-regexp">s/#//</span>;<br>  <span class="hljs-keyword">print</span> OUT $eachline;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">print</span> OUT $eachline;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-将多个vcf文件合并为一个并且按照染色体进行排序"><a href="#3-将多个vcf文件合并为一个并且按照染色体进行排序" class="headerlink" title="3.将多个vcf文件合并为一个并且按照染色体进行排序"></a>3.将多个vcf文件合并为一个并且按照染色体进行排序</h3><p>排序的解决思路：哈希表的排序</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!user/bin/perl</span><br><br><span class="hljs-keyword">use</span> warnings;<br><span class="hljs-keyword">use</span> Data::Dumper;<br><br><span class="hljs-keyword">my</span> $bcftools = <span class="hljs-string">&quot;bcftools-1.9&quot;</span>;<br><br><span class="hljs-keyword">my</span> $indir = $ARGV[<span class="hljs-number">0</span>];<br><br><span class="hljs-keyword">opendir</span>  DIR, $indir <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Connot open $indir: $!&quot;</span>;<br><br>@allfile = <span class="hljs-keyword">grep</span> &#123; <span class="hljs-regexp">/^[^\.]/</span> &#125; <span class="hljs-keyword">readdir</span> DIR;<br><br><br><span class="hljs-keyword">open</span> mergeVCF, <span class="hljs-string">&quot;&gt;mergevcf&quot;</span> || <span class="hljs-keyword">die</span> $!;<br><br><span class="hljs-keyword">my</span> (%hashVar);<br><br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $file (@allfile)&#123;<br><span class="hljs-keyword">open</span> FA,<span class="hljs-string">&quot;$indir/$file&quot;</span>|| <span class="hljs-keyword">die</span> $!;<br><span class="hljs-keyword">while</span>(&lt;FA&gt;)&#123;<br><span class="hljs-keyword">chomp</span>();<br><span class="hljs-keyword">my</span> @seq = <span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>, $_;<br><span class="hljs-keyword">my</span> ($chr, $pos, $ID, $REF, $ALT, $QUAL, $FILTER) = @seq[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>];<br>$hashVar&#123;$chr&#125;&#123;$pos&#125;&#123;$ID&#125;&#123;$REF&#125;&#123;$ALT&#125;&#123;$QUAL&#125;&#123;$FILTER&#125;=<span class="hljs-string">&quot;sample&quot;</span>;<br>&#125;<br>&#125;<br><br><br><span class="hljs-keyword">my</span> @chrorder =<span class="hljs-string">qw (chr1 chr2)</span>;<br><br> <br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $chr (@chrorder)&#123;<br><span class="hljs-keyword">next</span> <span class="hljs-keyword">unless</span> (<span class="hljs-keyword">exists</span> $hashVar&#123;$chr&#125;);<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $pos (<span class="hljs-keyword">sort</span> &#123;$a&lt;=&gt;$b&#125; <span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#125;)&#123;<br><span class="hljs-keyword">print</span> <span class="hljs-string">&quot;$pos\n&quot;</span>;<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $ID (<span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#123;$pos&#125;&#125;)&#123;<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $REF (<span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#123;$pos&#125;&#123;$ID&#125;&#125;)&#123;<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $ALT (<span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#123;$pos&#125;&#123;$ID&#125;&#123;$REF&#125;&#125;)&#123;<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $QUAL (<span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#123;$pos&#125;&#123;$ID&#125;&#123;$REF&#125;&#123;$ALT&#125;&#125;)&#123;<br><span class="hljs-keyword">for</span>  <span class="hljs-keyword">my</span> $FILTER (<span class="hljs-keyword">keys</span> %&#123;$hashVar&#123;$chr&#125;&#123;$pos&#125;&#123;$ID&#125;&#123;$REF&#125;&#123;$ALT&#125;&#123;$QUAL&#125;&#125;)&#123;<br><span class="hljs-keyword">print</span> mergeVCF <span class="hljs-keyword">join</span> (<span class="hljs-string">&quot;\t&quot;</span>,$chr, $pos, $ID, $REF, $ALT,$QUAL, $FILTER), <span class="hljs-string">&quot;\n&quot;</span>;<br><br>&#125;&#125;&#125;&#125;&#125;&#125;&#125;<br><br><br><span class="hljs-keyword">print</span> Dumper (\%hashVar);<br><span class="hljs-keyword">close</span> mergeVCF;<br></code></pre></td></tr></table></figure><h3 id="4-按照染色体提取分别保存在不同的文件里"><a href="#4-按照染色体提取分别保存在不同的文件里" class="headerlink" title="4.按照染色体提取分别保存在不同的文件里"></a>4.按照染色体提取分别保存在不同的文件里</h3><figure class="highlight plaintext"><figcaption><span>strict;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs use"><br><br>my $bcftools = &quot;bcftools-1.9&quot;;<br>my $varFile = &quot;15TSLC.vqsr_pass.vep.vcf.gz &quot;;<br><br>open IH, &quot;$bcftools view -H $varFile |&quot; || die $!;   <br>open other,&quot;&gt;other.vcf&quot; || die $!;<br><br>my (%normal_chr,%fh);<br>my @chrorder = qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y);<br><br>foreach my $chr (@chrorder)&#123;<br>    $normal_chr&#123;&quot;chr$chr&quot;&#125;=1 ; <br>    open  $fh&#123;&quot;chr&quot;.$chr&#125;,&quot;&gt;chr$chr.txt&quot; or die $!;<br>&#125;<br><br><br>while(&lt;IH&gt;)&#123;<br>    chomp();<br>    my  @seq = split /\s+/, $_ ;<br>    if (exists $normal_chr&#123;$seq[0]&#125;)&#123;<br>        print $seq[0];<br>        $fh&#123;$seq[0]&#125;-&gt;print( &quot;$_\n&quot;);<br>            &#125;else&#123;<br>                print other $_;&#125;<br>        &#125;<br>foreach my $chr (@chrorder)&#123;<br>    close $fh&#123;&quot;chr&quot;.$chr&#125;;<br>&#125;<br> close other;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>perl_for</title>
    <link href="/2022/03/30/perl-for/"/>
    <url>/2022/03/30/perl-for/</url>
    
    <content type="html"><![CDATA[<h3 id="perl-循环用法"><a href="#perl-循环用法" class="headerlink" title="perl 循环用法"></a>perl 循环用法</h3><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $i = <span class="hljs-number">0</span>;  <br><span class="hljs-keyword">while</span>($i &lt; <span class="hljs-keyword">scalar</span> @array) &#123;  <br>    <span class="hljs-keyword">print</span> $i, <span class="hljs-string">&quot;: &quot;</span>, $array[$i];  <br>    $i++;  <br>&#125; <br></code></pre></td></tr></table></figure><p>举例：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs perl">@tt = <span class="hljs-number">5</span>..<span class="hljs-number">9</span> ;<br><span class="hljs-keyword">my</span> $i = <span class="hljs-number">0</span>;  <br><span class="hljs-keyword">while</span>($i &lt; <span class="hljs-keyword">scalar</span> @tt) &#123;  <br>    <span class="hljs-keyword">print</span> $i, <span class="hljs-string">&quot; : &quot;</span>, <span class="hljs-string">&quot;$tt[$i]\n&quot;</span>;  <br>    $i++;  <br>&#125; <br></code></pre></td></tr></table></figure><h4 id="until"><a href="#until" class="headerlink" title="until"></a>until</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $i = <span class="hljs-number">0</span>;  <br><span class="hljs-keyword">until</span>($i &gt;= <span class="hljs-keyword">scalar</span> @array) &#123;  <br>    <span class="hljs-keyword">print</span> $i, <span class="hljs-string">&quot;: &quot;</span>, $array[$i];  <br>    $i++;  <br>&#125; <br><span class="hljs-comment">#!/usr/bin/perl</span><br>@tt = <span class="hljs-number">5</span>..<span class="hljs-number">9</span> ;<br><br><span class="hljs-keyword">my</span> $i = <span class="hljs-number">0</span>;  <br><span class="hljs-keyword">until</span>($i &gt;= <span class="hljs-keyword">scalar</span> @tt) &#123;  <br>    <span class="hljs-keyword">print</span> $i, <span class="hljs-string">&quot; : &quot;</span>, <span class="hljs-string">&quot;$tt[$i]\n&quot;</span>;  <br>    $i++;  <br>&#125; <br></code></pre></td></tr></table></figure><h4 id="Do"><a href="#Do" class="headerlink" title="Do"></a>Do</h4><p>将until 或者while 加到后面</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!/usr/bin/perl</span><br>@tt = <span class="hljs-number">5</span>..<span class="hljs-number">9</span> ;<br><br><span class="hljs-keyword">my</span> $i = <span class="hljs-number">0</span>;  <br><span class="hljs-keyword">do</span> &#123;  <br>    <span class="hljs-keyword">print</span> $i, <span class="hljs-string">&quot; : &quot;</span>, <span class="hljs-string">&quot;$tt[$i]\n&quot;</span>;  <br>    $i++;  <br>&#125;<span class="hljs-keyword">until</span> ($i &gt;= <span class="hljs-keyword">scalar</span> @tt)<br></code></pre></td></tr></table></figure><h4 id="迭代哈希键值"><a href="#迭代哈希键值" class="headerlink" title="迭代哈希键值"></a>迭代哈希键值</h4><p>你不能去迭代一个哈希变量。但是，你可以迭代它的键值。使用keys内置函数，获取哈希变量的所有键值数组。然后使用foreach方法，就像数组一样：</p><p>foreach my $key (keys %scientists) {<br>    print $key, “: “, $scientists{$key};<br>} </p><p>因为哈希变量没有顺序，键值可能以任何顺序被返回。使用sort内置函数对键值数组排序，按照字母表从小到大的方式：<br>foreach my $key (sort keys %scientists) {<br>    print $key, “: “, $scientists{$key};<br>} </p><h4 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h4><p>Next last 允许在循环中改变程序<br>next跳至本次循环的结束，跳出迭代<br>last 退出循环语句块，从而结束循环，last语句之后的语句不再执行，continue语句块也不再执行</p><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4><p>for循环不仅仅可以支持数字递增递减的循环方式，还可以支持其他类型的循环，只要能进行判断就可。<br>数字的递增递减<br>for (my $i&#x3D;1;$i&lt;&#x3D;10;$i++){<br>print $i,”&#x2F;n”;}</p><p>for括号里面的三个表达式都可以省略，但是两个分号不能省略。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">my</span> $str=<span class="hljs-string">&quot;malongshuai&quot;</span>;$str =~ <span class="hljs-regexp">s/(.)//</span>;)&#123;<br>    <span class="hljs-keyword">print</span> $str,<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>像shell的for i in ..的操作也可以使用，遍历整个列表；</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> @arr=<span class="hljs-string">qw(shel cuabc bjab)</span><br><span class="hljs-keyword">for</span> $i (@arr)&#123;<br><span class="hljs-keyword">print</span> <span class="hljs-string">&quot;$i/n&quot;</span>;<br>&#125;<br><span class="hljs-keyword">for</span> @arr&#123;<br><span class="hljs-keyword">print</span> <span class="hljs-string">&quot;$_/n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="perl-控制语句"><a href="#perl-控制语句" class="headerlink" title="perl 控制语句"></a>perl 控制语句</h4><h4 id="perl-三目运算符-？"><a href="#perl-三目运算符-？" class="headerlink" title="perl 三目运算符 ？"></a>perl 三目运算符 ？</h4><p>如果表达式为真，表达式返回if_true，否则返回if_false,<br>expression ? if_true:if_false</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-number">1.</span><span class="hljs-symbol">$</span>avg = <span class="hljs-symbol">$</span>n ? <span class="hljs-symbol">$</span><span class="hljs-keyword">sum</span>/<span class="hljs-symbol">$</span>n : <span class="hljs-string">&quot;------&quot;</span>;<br><span class="hljs-number">2.</span><span class="hljs-keyword">if</span>(<span class="hljs-symbol">$</span>n)&#123;<br>    <span class="hljs-symbol">$</span>avg = <span class="hljs-symbol">$</span><span class="hljs-keyword">sum</span> / <span class="hljs-symbol">$</span>n;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-symbol">$</span>avg = <span class="hljs-string">&quot;------&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述代码表达内容相等<br>三目还可以更复杂：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> <span class="hljs-number">5.010</span>;<br><br>$score = $ARGV[<span class="hljs-number">0</span>];<br>$mark = ($score &lt; <span class="hljs-number">60</span>) ? <span class="hljs-string">&quot;a&quot;</span> : <br>        ($score &lt; <span class="hljs-number">80</span>) ? <span class="hljs-string">&quot;b&quot;</span> : <br>        ($score &lt; <span class="hljs-number">90</span>) ? <span class="hljs-string">&quot;c&quot;</span> : <br>        <span class="hljs-string">&quot;d&quot;</span>;          <span class="hljs-comment"># 默认值</span><br><span class="hljs-keyword">say</span> $mark;<br></code></pre></td></tr></table></figure><p>输出的结果：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$ perl test<span class="hljs-selector-class">.plx</span><br><span class="hljs-selector-tag">a</span><br>$ perl test<span class="hljs-selector-class">.plx</span> <span class="hljs-number">33</span><br><span class="hljs-selector-tag">a</span><br>$ perl test<span class="hljs-selector-class">.plx</span> <span class="hljs-number">63</span><br><span class="hljs-selector-tag">b</span><br>$ perl test<span class="hljs-selector-class">.plx</span> <span class="hljs-number">83</span><br>c<br>$ perl test<span class="hljs-selector-class">.plx</span> <span class="hljs-number">93</span><br>d<br></code></pre></td></tr></table></figure><h4 id="and-操作符："><a href="#and-操作符：" class="headerlink" title="and 操作符："></a>and 操作符：</h4><p>用于连接两个行为，左边为真，就执行右边的操作。<br>$m &lt; $n and $m &#x3D; $n;   # 以$m的姿态取出$m和$n之间较大值<br>下面代码所表达的意思是一样的。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">if</span> ($m&lt;$n)&#123;$m=$n&#125;<br>$m=$n <span class="hljs-keyword">if</span> $m&lt;$n<span class="hljs-comment">;</span><br>$m=($m &lt; $n) ? $n : $m<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WGCNA</title>
    <link href="/2022/03/30/WGCNA/"/>
    <url>/2022/03/30/WGCNA/</url>
    
    <content type="html"><![CDATA[<p>参考<br><a href="https://www.zhouxiaozhao.cn/2020/08/03/WGCNA1/">https://www.zhouxiaozhao.cn/2020/08/03/WGCNA1/</a><br><a href="https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/index.html">https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/index.html</a><br><a href="https://cloud.tencent.com/developer/article/1516749">https://cloud.tencent.com/developer/article/1516749</a></p><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>加权基因共表达网络分析 (WGCNA, Weighted correlation network analysis)是用来描述不同样品之间基因关联模式的系统生物学方法，可以用来鉴定高度协同变化的基因集, 并根据基因集的内连性和基因集与表型之间的关联鉴定候补生物标记基因或治疗靶点。相比于只关注差异表达的基因，WGCNA利用数千或近万个变化最大的基因或全部基因的信息识别感兴趣的基因集，并与表型进行显著性关联分析。一是充分利用了信息，二是把数千个基因与表型的关联转换为数个基因集与表型的关联，免去了多重假设检验校正的问题。<br>共表达网络：<br>点代表基因，边代表基因表达相关性。加权是指对相关性值进行冥次运算(冥次的值也就是软阈值 (power, pickSoftThreshold这个函数所做的就是确定合适的power))。无向网络的边属性计算方式为abs(cor(genex, geney)) ^ power；有向网络的边属性计算方式为(1+cor(genex, geney)&#x2F;2) ^ power; sign hybrid的边属性计算方式为cor(genex, geney)^power if cor&gt;0 else 0。这种处理方式强化了强相关，弱化了弱相关或负相关，使得相关性数值更符合无标度网络特征，更具有生物意义。如果没有合适的power，一般是由于部分样品与其它样品因为某种原因差别太大导致的，可根据具体问题移除部分样品或查看后面的经验值。</p><p>Module(模块）<br>高度內连的基因集。在无向网络中，模块内是高度相关的基因。在有向网络中，模块内是高度正相关的基因。把基因聚类成模块后，可以对每个模块进行三个层次的分析：1. 功能富集分析查看其功能特征是否与研究目的相符；2. 模块与性状进行关联分析，找出与关注性状相关度最高的模块；3. 模块与样本进行关联分析，找到样品特异高表达的模块。</p><p>Hub gene: 关键基因 (连接度最多或连接多个模块的基因)。<br>Adjacency matrix (邻接矩阵)：<br>基因和基因之间的加权相关性值构成的矩阵。<br>TOM (Topological overlap matrix)：<br>把邻接矩阵转换为拓扑重叠矩阵，以降低噪音和假相关，获得的新距离矩阵，这个信息可拿来构建网络或绘制TOM图。<br>模块内部基因连接度分析<br>● Intramodular connectivity KIM-模块内部连接度IC:某个模块中的基因与该模块中其他基因的关联程度（共表达程度）。可用来衡量模块身份（module membership,MM).<br>● Module Membership MM,or Epigengene-based connectivity KME:模块身份，用一个基因在所有样本中的表达语与某个模块特征值的表达谱的相关性，来衡量这个基因在这个模块中的身份。<br>● KME值接近0,说明这个基因不是该模块的成员：KME接近1或者－1,说明这个基因与该模块密切相关（正相关或者负相关）。 可以对所有基因计算相对某个模块的KME值，并不一定要是该模块的成员。 KME与KIM高度相关。某个模块中KIM值高的hub基因一定与该模块的KME也很高。 KME与KIM的区别：IC衡量基因在特定模块中的身份，MM衡量基因在全局网络中的位置。<br>● 筛选关键基因： TOM值（模块调控系表中的weight值）大于阈值（默认是0.15)的两个基因才认为是相关的，然后计算每个基因的连接度。即先筛选有足够强度的关系，然后计算连接度。<br>● 模块内部高连接度的基因，模块内排名前30或者10%(KME或KIM). 筛选关键基因：将该基因模块身份MM相对于基因显著性GS做散点图，选择右上角MM和GS均高的基因进一步分析。 基因显著性值（Gene significance,GS)因变量水平的相关系数。衡量基因与表型性状的关联程度，GS越高，说明与表型越相关，越具有生物学意义。GS可以为正值或负值（正相关或负相关） Cytoscape中一般用weight值（TOM值）来绘制网络图。<br>过程</p><ol><li>构建基因共表达网络：使用加权的表达相关性。</li><li>识别基因集：基于加权相关性，进行层级聚类分析，并根据设定标准切分聚类结果，获得不同的基因模块，用聚类树的分枝和不同颜色表示。</li><li>如果有表型信息，计算基因模块与表型的相关性，鉴定性状相关的模块。</li><li>研究模型之间的关系，从系统层面查看不同模型的互作网络。</li><li>从关键模型中选择感兴趣的驱动基因，或根据模型中已知基因的功能推测未知基因的功能。</li><li>导出TOM矩阵，绘制相关性图。<h3 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#BiocManager::install(&quot;WGCNA&quot;,force = TRUE)</span><br><span class="hljs-comment"># BiocManager::install(&quot;GO.db&quot;)</span><br>library(WGCNA)<br>library(reshape2)<br>library(stringr)  <br>library(TCGAbiolinks)<br>library(dplyr)<br>library(DT)<br>library(SummarizedExperiment)<br>options(stringsAsFactors = FALSE)<br><span class="hljs-comment"># 打开多线程</span><br>enableWGCNAThreads()<br><br>data_type &lt;- <span class="hljs-string">&quot;Gene Expression Quantification&quot;</span><br>data_catetory &lt;- <span class="hljs-string">&quot;Transcriptome Profiling&quot;</span><br>expr &lt;- GDCquery(project = <span class="hljs-string">&quot;TCGA-OV&quot;</span>,<br>                 data.category = data_catetory,<br>                 data.type = data_type,<br>                 workflow.type = <span class="hljs-string">&quot;HTSeq - FPKM&quot;</span>)<br>GDCdownload(expr,method = <span class="hljs-string">&quot;api&quot;</span>,files.per.chunk = <span class="hljs-number">100</span>)<br>EXPR2 &lt;- GDCprepare(query = expr)<br>exprmat &lt;- assay(EXPR2)<br>exprlog &lt;- log2(exprmat+<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># WGCNA_matrix = t(exprmat[order(apply(exprmat,1,mad), decreasing = T)[1:5000],])</span><br><span class="hljs-comment">## 筛选中位绝对偏差前75%的基因，至少MAD大于0.01</span><br><span class="hljs-comment">## 筛选后会降低运算量，也会失去部分信息</span><br><span class="hljs-comment">## 也可不做筛选，使MAD大于0即可</span><br>m.mad &lt;- apply(exprlog,<span class="hljs-number">1</span>,mad)<br>dataExprVar &lt;- exprlog[which(m.mad &gt; <br>                               max(quantile(m.mad, probs=se<span class="hljs-string">q(0, 1, 0.25)</span>)[<span class="hljs-number">2</span>],<span class="hljs-number">0</span>.<span class="hljs-number">01</span>)),]<br><br><span class="hljs-comment">## 转换为样品在行，基因在列的矩阵</span><br>datExpr &lt;- as.data.frame(t(dataExprVar))<br><span class="hljs-comment"># datExpr0 &lt;- WGCNA_matrix  ## top 5000 mad genes</span><br><span class="hljs-comment"># datExpr &lt;- datExpr0 </span><br><br>gsg = goodSamplesGenes(datExpr, verbose = <span class="hljs-number">3</span>)<br><br><br><span class="hljs-keyword">if</span> (!gsg$allOK)&#123;<br>  <span class="hljs-comment"># Optionally, print the gene and sample names that were removed:</span><br>  <span class="hljs-keyword">if</span> (sum(!gsg$goodGenes)&gt;<span class="hljs-number">0</span>) <br>    printFlush(paste(<span class="hljs-string">&quot;Removing genes:&quot;</span>, <br>                     paste(names(dataExpr)[!gsg$goodGenes], collapse = <span class="hljs-string">&quot;,&quot;</span>)));<br>  <span class="hljs-keyword">if</span> (sum(!gsg$goodSamples)&gt;<span class="hljs-number">0</span>) <br>    printFlush(paste(<span class="hljs-string">&quot;Removing samples:&quot;</span>, <br>                     paste(rownames(dataExpr)[!gsg$goodSamples], collapse = <span class="hljs-string">&quot;,&quot;</span>)));<br>  <span class="hljs-comment"># Remove the offending genes and samples from the data:</span><br>  datExpr = datExpr[gsg$goodSamples, gsg$goodGenes]<br>&#125;<br><br>nGenes = ncol(datExpr)<br>nSamples = nrow(datExpr)<br><br><span class="hljs-comment">## 查看是否有离群样品</span><br>sampleTree = hclust(dist(datExpr), method = <span class="hljs-string">&quot;average&quot;</span>)<br>plot(sampleTree, main = <span class="hljs-string">&quot;Sample clustering to detect outliers&quot;</span>, <br>     <span class="hljs-function"><span class="hljs-keyword">sub</span>=&quot;&quot;, <span class="hljs-title">xlab</span>=&quot;<span class="hljs-title">sample</span>&quot;,<span class="hljs-title">label</span>=<span class="hljs-title">F</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">abline</span></span>(h = 170, col = &quot;red&quot;);<br><span class="hljs-comment"># Determine cluster under the line</span><br>clust = cutreeStatic(sampleTree, cutHeight = <span class="hljs-number">170</span>, minSize = <span class="hljs-number">10</span>)<br>table(clust)<br><span class="hljs-comment"># clust 1 contains the samples we want to keep.</span><br>keepSamples = (clust==<span class="hljs-number">1</span>)<br>datExpr<span class="hljs-number">0</span> = datExpr[keepSamples, ]<br>nGenes = ncol(datExpr<span class="hljs-number">0</span>)<br>nSamples = nrow(datExpr<span class="hljs-number">0</span>)<br><span class="hljs-comment"># 还差临床信息 ------------------------------------------------------------------</span><br>sampleName &lt;- rownames(datExpr<span class="hljs-number">0</span>)<br>query &lt;-GDCquery(project = <span class="hljs-string">&quot;TCGA-OV&quot;</span>, <br>                 data.category = <span class="hljs-string">&quot;Clinical&quot;</span>,<br>                 data.type = <span class="hljs-string">&quot;Clinical Supplement&quot;</span>, <br>                 data.format = <span class="hljs-string">&quot;BCR Biotab&quot;</span>)<br><br>GDCdownload(query)<br>clinicalov &lt;-GDCprepare(query)<br>clinical &lt;- clinicalov$clinical_patient_ov<br>clinical &lt;- <br>  clinical[match(<span class="hljs-keyword">substr</span>(sampleName,<span class="hljs-number">1</span>,<span class="hljs-number">12</span>),clinical$bcr_patient_barcode),c(<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">33</span>) ] %&gt;% <br>  as.data.frame()<br><br>rownames(clinical) &lt;- sampleName<br><br><span class="hljs-comment"># Choose a set of soft-thresholding powers</span><br>powers = c(c(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>), se<span class="hljs-string">q(from = 12, to=20, by=2)</span>)<br><span class="hljs-comment"># Call the network topology analysis function</span><br>sft = pickSoftThreshold(datExpr<span class="hljs-number">0</span>, powerVector = powers, verbose = <span class="hljs-number">5</span>)<br><span class="hljs-comment"># Plot the results:</span><br>sizeGrWindow(<span class="hljs-number">9</span>, <span class="hljs-number">5</span>)<br>par(mfrow = c(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>));<br>cex1 = <span class="hljs-number">0</span>.<span class="hljs-number">9</span>;<br><span class="hljs-comment"># Scale-free topology fit index as a function of the soft-thresholding power</span><br><span class="hljs-comment"># 横轴是Soft threshold (power)，纵轴是无标度网络的评估参数，数值越高，</span><br><span class="hljs-comment"># 网络越符合无标度特征 (non-scale)</span><br><span class="hljs-comment"># 筛选标准。R-square=0.85</span><br>plot(sft$fitIndices[,<span class="hljs-number">1</span>], -sign(sft$fitIndices[,<span class="hljs-number">3</span>])*sft$fitIndices[,<span class="hljs-number">2</span>],<br>     xlab=<span class="hljs-string">&quot;Soft Threshold (power)&quot;</span>,ylab=<span class="hljs-string">&quot;Scale Free Topology Model Fit,signed R^2&quot;</span>,type=<span class="hljs-string">&quot;n&quot;</span>,<br>     main = paste(<span class="hljs-string">&quot;Scale independence&quot;</span>));<br>text(sft$fitIndices[,<span class="hljs-number">1</span>], -sign(sft$fitIndices[,<span class="hljs-number">3</span>])*sft$fitIndices[,<span class="hljs-number">2</span>],<br>     labels=powers,cex=cex1,col=<span class="hljs-string">&quot;red&quot;</span>);<br><span class="hljs-comment"># this line corresponds to using an R^2 cut-off of h</span><br>abline(h=<span class="hljs-number">0</span>.<span class="hljs-number">90</span>,col=<span class="hljs-string">&quot;red&quot;</span>)<br><span class="hljs-comment"># Mean connectivity as a function of the soft-thresholding power</span><br>plot(sft$fitIndices[,<span class="hljs-number">1</span>], sft$fitIndices[,<span class="hljs-number">5</span>],<br>     xlab=<span class="hljs-string">&quot;Soft Threshold (power)&quot;</span>,ylab=<span class="hljs-string">&quot;Mean Connectivity&quot;</span>, type=<span class="hljs-string">&quot;n&quot;</span>,<br>     main = paste(<span class="hljs-string">&quot;Mean connectivity&quot;</span>))<br>text(sft$fitIndices[,<span class="hljs-number">1</span>], sft$fitIndices[,<span class="hljs-number">5</span>], labels=powers, cex=cex1,col=<span class="hljs-string">&quot;red&quot;</span>)<br>power = sft$powerEstimate<br>power<br>nGenes = ncol(datExpr<span class="hljs-number">0</span>)<br><br>nSamples = nrow(datExpr<span class="hljs-number">0</span>)<br><br><br><br><span class="hljs-comment">##21换成了0.8power改为5</span><br>project &lt;- readRDS(<span class="hljs-string">&quot;~/hrdect/HRDzong/WGCNA/project.rds&quot;</span>)<br><span class="hljs-keyword">for</span>( i in <span class="hljs-number">1</span>:nrow(project))&#123;<br>  pdf(file=paste(<span class="hljs-string">&quot;/home/lhm/hrdect/HRDzong/WGCNA/sftpicture/&quot;</span>,project[i,],<span class="hljs-string">&quot;.pdf&quot;</span>,sep = <span class="hljs-string">&quot;&quot;</span>),<br>      width = <span class="hljs-number">9</span>,height = <span class="hljs-number">5</span>)<br>  powers = c(c(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>), se<span class="hljs-string">q(from = 12, to=30, by=2)</span>)<br><span class="hljs-comment"># Call the network topology analysis function</span><br>  sft = pickSoftThreshold(datExpr<span class="hljs-number">0</span>, powerVector = powers, verbose = <span class="hljs-number">5</span>)<br><span class="hljs-comment"># Plot the results:</span><br>  sizeGrWindow(<span class="hljs-number">9</span>, <span class="hljs-number">5</span>)<br>  par(mfrow = c(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>));<br>  cex1 = <span class="hljs-number">0</span>.<span class="hljs-number">9</span>;<br><span class="hljs-comment"># Scale-free topology fit index as a function of the soft-thresholding power</span><br>  plot(sft$fitIndices[,<span class="hljs-number">1</span>], -sign(sft$fitIndices[,<span class="hljs-number">3</span>])*sft$fitIndices[,<span class="hljs-number">2</span>],<br>     xlab=paste(<span class="hljs-string">&quot;Soft Threshold (power)&quot;</span>,<span class="hljs-string">&quot;\n&quot;</span>,project[i,]),ylab=<span class="hljs-string">&quot;Scale Free Topology Model Fit,signed R^2&quot;</span>,type=<span class="hljs-string">&quot;n&quot;</span>,<br>     main = paste(<span class="hljs-string">&quot;Scale independence&quot;</span>));<br>  text(sft$fitIndices[,<span class="hljs-number">1</span>], -sign(sft$fitIndices[,<span class="hljs-number">3</span>])*sft$fitIndices[,<span class="hljs-number">2</span>],<br>     labels=powers,cex=cex1,col=<span class="hljs-string">&quot;red&quot;</span>);<br><span class="hljs-comment"># this line corresponds to using an R^2 cut-off of h</span><br>  abline(h=<span class="hljs-number">0</span>.<span class="hljs-number">85</span>,col=<span class="hljs-string">&quot;red&quot;</span>)<br><span class="hljs-comment"># Mean connectivity as a function of the soft-thresholding power</span><br>  plot(sft$fitIndices[,<span class="hljs-number">1</span>], sft$fitIndices[,<span class="hljs-number">5</span>],<br>     xlab=paste(<span class="hljs-string">&quot;Soft Threshold (power)&quot;</span>,<span class="hljs-string">&quot;\n&quot;</span>,project[i,]),ylab=<span class="hljs-string">&quot;Mean Connectivity&quot;</span>, type=<span class="hljs-string">&quot;n&quot;</span>,<br>     main = paste(<span class="hljs-string">&quot;Mean connectivity&quot;</span>))<br>  text(sft$fitIndices[,<span class="hljs-number">1</span>], sft$fitIndices[,<span class="hljs-number">5</span>], labels=powers, cex=cex1,col=<span class="hljs-string">&quot;red&quot;</span>)<br>  dev.off()<br>&#125;<br><br><br><br>power = sft$powerEstimate<br>power<br>nGenes = ncol(datExpr<span class="hljs-number">0</span>)<br><br>nSamples = nrow(datExpr<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># This step is the bedrock of all network analyses using the WGCNA methodology. We present three different ways of</span><br><span class="hljs-comment"># constructing a network and identifying modules:</span><br><span class="hljs-comment">#   a. Using a convenient 1-step network construction and module detection function, suitable for users wishing to arrive</span><br><span class="hljs-comment"># at the result with minimum effort;</span><br><span class="hljs-comment"># b. Step-by-step network construction and module detection for users who would like to experiment with customized/alternate methods;</span><br><span class="hljs-comment"># c. An automatic block-wise network construction and module detection method for users who wish to analyze data</span><br><span class="hljs-comment"># sets too large to be analyzed all in one.</span><br><br><br>project &lt;- readRDS(<span class="hljs-string">&quot;~/hrdect/HRDzong/WGCNA/project.rds&quot;</span>)<br><span class="hljs-keyword">for</span> (i in <span class="hljs-number">1</span>:nrow(project))&#123;<br>  i=<span class="hljs-number">12</span><br>  load(paste(<span class="hljs-string">&quot;~/hrdect/HRDzong/WGCNA/first_step/&quot;</span>,project[i,],<span class="hljs-string">&quot;.Rdata&quot;</span>,sep = <span class="hljs-string">&quot;&quot;</span>))<br>  load(paste(<span class="hljs-string">&quot;~/hrdect/HRDzong/WGCNA/sft/&quot;</span>,project[i,],<span class="hljs-string">&quot;sft.Rdata&quot;</span>,sep = <span class="hljs-string">&quot;&quot;</span>))<br>  nGenes = ncol(datExpr<span class="hljs-number">0</span>)<br>  cor &lt;- WGCNA::cor<br> <span class="hljs-keyword">if</span>(i==<span class="hljs-number">21</span>)&#123;<br>   <span class="hljs-keyword">print</span>(T)<br>   net = blockwiseModules(datExpr<span class="hljs-number">0</span>, power =<span class="hljs-number">5</span> ,maxBlockSize = nGenes,<br>                          TOMType = <span class="hljs-string">&quot;unsigned&quot;</span>, minModuleSize = <span class="hljs-number">30</span>,<br>                          reassignThreshold = <span class="hljs-number">0</span>, mergeCutHeight = <span class="hljs-number">0</span>.<span class="hljs-number">25</span>,<br>                          numericLabels = TRUE, pamRespectsDendro = FALSE,<br>                          saveTOMs = TRUE,loadTOM =TRUE,<br>                          saveTOMFileBase = <span class="hljs-string">&quot;TOM&quot;</span>,<br>                          verbose = <span class="hljs-number">3</span>)&#125;<br> <span class="hljs-keyword">else</span>&#123;<br>   <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;power&quot;</span>)<br>   net = blockwiseModules(datExpr<span class="hljs-number">0</span>, power = sft$powerEstimate,maxBlockSize = nGenes,<br>                       TOMType = <span class="hljs-string">&quot;unsigned&quot;</span>, minModuleSize = <span class="hljs-number">30</span>,<br>                       reassignThreshold = <span class="hljs-number">0</span>, mergeCutHeight = <span class="hljs-number">0</span>.<span class="hljs-number">25</span>,<br>                       numericLabels = TRUE, pamRespectsDendro = FALSE,<br>                       saveTOMs = TRUE,loadTOM =TRUE,<br>                       saveTOMFileBase = <span class="hljs-string">&quot;TOM&quot;</span>,<br>                       verbose = <span class="hljs-number">3</span>)<br> &#125;<br>  save(net,file =paste(<span class="hljs-string">&quot;~/hrdect/HRDzong/WGCNA/netdata2/&quot;</span>,project[i,],<span class="hljs-string">&quot;.Rdata&quot;</span>,sep = <span class="hljs-string">&quot;&quot;</span>))<br><br>&#125;<span class="hljs-comment">###修改了maxBlockSize</span><br><br>cor &lt;- WGCNA::cor<br>net = blockwiseModules(datExpr<span class="hljs-number">0</span>, power = <span class="hljs-number">5</span>,<br>                       TOMType = <span class="hljs-string">&quot;unsigned&quot;</span>, minModuleSize = <span class="hljs-number">30</span>,<br>                       reassignThreshold = <span class="hljs-number">0</span>, mergeCutHeight = <span class="hljs-number">0</span>.<span class="hljs-number">25</span>,<br>                       numericLabels = TRUE, pamRespectsDendro = FALSE,<br>                       saveTOMs = TRUE,loadTOM =TRUE,<br>                       saveTOMFileBase = <span class="hljs-string">&quot;TOM&quot;</span>,<br>                       verbose = <span class="hljs-number">3</span>)<br><br><br><br>table(net$colors)<br><br>sizeGrWindow(<span class="hljs-number">12</span>, <span class="hljs-number">9</span>)<br><span class="hljs-comment"># Convert labels to colors for plotting</span><br>mergedColors = labels2colors(net$colors)<br><span class="hljs-comment"># Plot the dendrogram and the module colors underneath</span><br>plotDendroAndColors(net$dendrograms[[<span class="hljs-number">1</span>]], mergedColors[net$blockGenes[[<span class="hljs-number">1</span>]]],<br>                    <span class="hljs-string">&quot;Module colors&quot;</span>,<br>                    dendroLabels = FALSE, hang = <span class="hljs-number">0</span>.<span class="hljs-number">03</span>,<br>                    addGuide = TRUE, guideHang = <span class="hljs-number">0</span>.<span class="hljs-number">05</span>)<br><br><br><span class="hljs-comment">#绘制模块之间相关性图</span><br><span class="hljs-comment"># module eigengene, 可以绘制线图，作为每个模块的基因表达趋势的展示</span><br>MEs = net$MEs<br><br><span class="hljs-comment">### 不需要重新计算，改下列名字就好</span><br><span class="hljs-comment">### 官方教程是重新计算的，起始可以不用这么麻烦</span><br>MEs_col = MEs<br>colnames(MEs_col) = paste<span class="hljs-number">0</span>(<span class="hljs-string">&quot;ME&quot;</span>, labels2colors(<br>  as.numeric(str_replace_all(colnames(MEs),<span class="hljs-string">&quot;ME&quot;</span>,<span class="hljs-string">&quot;&quot;</span>))))<br>MEs_col = orderMEs(MEs_col)<br><br><span class="hljs-comment"># 根据基因间表达量进行聚类所得到的各模块间的相关性图</span><br><span class="hljs-comment">##绘制模块之间的相关性</span><br><span class="hljs-comment"># marDendro/marHeatmap 设置下、左、上、右的边距</span><br>plotEigengeneNetworks(MEs_col, <span class="hljs-string">&quot;Eigengene adjacency heatmap&quot;</span>, <br>                      marDendro = c(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>),<br>                      marHeatmap = c(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>), plotDendrograms = T, <br>                      xLabelsAngle = <span class="hljs-number">90</span>)<br><br><br>moduleLabels = net$colors<br>moduleColors = labels2colors(net$colors)<br><span class="hljs-comment"># MEs = net$MEs;</span><br>geneTree = net$dendrograms[[<span class="hljs-number">1</span>]];<br><br>nGenes = ncol(datExpr<span class="hljs-number">0</span>);<br>nSamples = nrow(datExpr<span class="hljs-number">0</span>);<br><span class="hljs-comment"># Recalculate MEs with color labels</span><br>MEs<span class="hljs-number">0</span> = moduleEigengenes(datExpr<span class="hljs-number">0</span>, moduleColors)$eigengenes<br>MEs = orderMEs(MEs<span class="hljs-number">0</span>)<br><br><br>datTraits &lt;- clinical<br>datTraits$HH &lt;- rep(c(<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>),<span class="hljs-keyword">each</span>=<span class="hljs-number">189</span>)<br>datTraits$HY &lt;- rep(c(<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>),<span class="hljs-keyword">each</span>=<span class="hljs-number">189</span>)<br>datTraits &lt;- datTraits[,-c(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)]<br><br><br><br>moduleTraitCor = cor(MEs, datTraits, <span class="hljs-keyword">use</span> = <span class="hljs-string">&quot;p&quot;</span>);<br>moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);<br><span class="hljs-comment"># Since we have a moderately large number of modules and traits, a suitable graphical representation will help in</span><br><span class="hljs-comment"># reading the table. We color code each association by the correlation value:</span><br><span class="hljs-comment">#   sizeGrWindow(10,6)</span><br><span class="hljs-comment"># Will display correlations and their p-values\</span><br><br><br><br>textMatrix = paste(signif(moduleTraitCor, <span class="hljs-number">2</span>), <span class="hljs-string">&quot;\n(&quot;</span>,<br>                   signif(moduleTraitPvalue, <span class="hljs-number">1</span>), <span class="hljs-string">&quot;)&quot;</span>, sep = <span class="hljs-string">&quot;&quot;</span>);<br>dim(textMatrix) = dim(moduleTraitCor)<br>par(mar = c(<span class="hljs-number">6</span>, <span class="hljs-number">8.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>))<br><span class="hljs-comment"># Display the correlation values within a heatmap plot</span><br>labeledHeatmap(Matrix = moduleTraitCor,<br>               xLabels = names(datTraits),<br>               yLabels = names(MEs),<br>               ySymbols = names(MEs),<br>               colorLabels = FALSE,<br>               colors = greenWhiteRed(<span class="hljs-number">50</span>),<br>               textMatrix = textMatrix,<br>               setStdMargins = FALSE,<br>               cex.text = <span class="hljs-number">0</span>.<span class="hljs-number">5</span>,<br>               zlim = c(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<br>               main = paste(<span class="hljs-string">&quot;Module-trait relationships&quot;</span>))<br><span class="hljs-comment"># 性状跟模块虽然求出了相关性，可以挑选最相关的那些模块来分析，</span><br><span class="hljs-comment"># 但是模块本身仍然包含非常多的基因，还需进一步的寻找最重要的基因。</span><br><span class="hljs-comment"># 所有的模块都可以跟基因算出相关系数，</span><br><span class="hljs-comment"># 所有的连续型性状也可以跟基因的表达值算出相关系数。</span><br><span class="hljs-comment"># 如果跟性状显著相关基因也跟某个模块显著相关，那么这些基因可能就非常重要</span><br><span class="hljs-comment"># # Define variable weight containing the weight column of datTrait</span><br>weight = as.data.frame(datTraits$HH);<br>names(weight) = <span class="hljs-string">&quot;HH&quot;</span><br><span class="hljs-comment"># names (colors) of the modules</span><br><span class="hljs-comment"># 首先计算模块与基因的相关性矩阵 </span><br>modNames = substring(names(MEs), <span class="hljs-number">3</span>)<br>geneModuleMembership = as.data.frame(cor(datExpr<span class="hljs-number">0</span>, MEs, <span class="hljs-keyword">use</span> = <span class="hljs-string">&quot;p&quot;</span>));<br>MMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples))<br>names(geneModuleMembership) = paste(<span class="hljs-string">&quot;MM&quot;</span>, modNames, sep=<span class="hljs-string">&quot;&quot;</span>);<br>names(MMPvalue) = paste(<span class="hljs-string">&quot;p.MM&quot;</span>, modNames, sep=<span class="hljs-string">&quot;&quot;</span>);<br><span class="hljs-comment"># 再计算性状与基因的相关性矩阵 </span><br>geneTraitSignificance = as.data.frame(cor(datExpr<span class="hljs-number">0</span>, weight, <span class="hljs-keyword">use</span> = <span class="hljs-string">&quot;p&quot;</span>));<br>GSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples));<br>names(geneTraitSignificance) = paste(<span class="hljs-string">&quot;GS.&quot;</span>, names(weight), sep=<span class="hljs-string">&quot;&quot;</span>);<br>names(GSPvalue) = paste(<span class="hljs-string">&quot;p.GS.&quot;</span>, names(weight), sep=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-comment"># 最后把两个相关性矩阵联合起来,指定感兴趣模块进行分析 </span><br><br>module = <span class="hljs-string">&quot;blueviolet&quot;</span><br>column = match(module, modNames);<br>moduleGenes = moduleColors==module;<br>sizeGrWindow(<span class="hljs-number">7</span>, <span class="hljs-number">7</span>);<br>par(mfrow = c(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>));<br>verboseScatterplot(<span class="hljs-keyword">abs</span>(geneModuleMembership[moduleGenes, column]),<br>                   <span class="hljs-keyword">abs</span>(geneTraitSignificance[moduleGenes, <span class="hljs-number">1</span>]),<br>                   xlab = paste(<span class="hljs-string">&quot;Module Membership in&quot;</span>, module, <span class="hljs-string">&quot;module&quot;</span>),<br>                   ylab = <span class="hljs-string">&quot;Gene significance for Luminal&quot;</span>,<br>                   main = paste(<span class="hljs-string">&quot;Module membership vs. gene significance\n&quot;</span>),<br>                   cex.main = <span class="hljs-number">1.2</span>, cex.lab = <span class="hljs-number">1.2</span>, cex.axis = <span class="hljs-number">1.2</span>, col = module)<br><span class="hljs-comment">#网络的可视化</span><br><br><br><span class="hljs-comment"># 主要是可视化 TOM矩阵，WGCNA的标准配图</span><br><span class="hljs-comment"># 然后可视化不同 模块 的相关性 热图</span><br><span class="hljs-comment"># 不同模块的层次聚类图</span><br><span class="hljs-comment"># 还有模块诊断，主要是 intramodular connectivity</span><br>nGenes = ncol(datExpr<span class="hljs-number">0</span>)<br>nSamples = nrow(datExpr<span class="hljs-number">0</span>)<br>geneTree = net$dendrograms[[<span class="hljs-number">1</span>]]; <br>dissTOM = <span class="hljs-number">1</span>-TOMsimilarityFromExpr(datExpr<span class="hljs-number">0</span>, power = <span class="hljs-number">5</span>); <br>plotTOM = dissTOM^<span class="hljs-number">7</span>; <br>diag(plotTOM) = NA; <br><span class="hljs-comment">#TOMplot(plotTOM, geneTree, moduleColors, main = &quot;Network heatmap plot, all genes&quot;)</span><br>nSelect = <span class="hljs-number">400</span><br><span class="hljs-comment"># For reproducibility, we set the random seed</span><br>set.seed(<span class="hljs-number">10</span>);<br><span class="hljs-keyword">select</span> = sample(nGenes, size = nSelect);<br>selectTOM = dissTOM[<span class="hljs-keyword">select</span>, <span class="hljs-keyword">select</span>];<br><span class="hljs-comment"># There’s no simple way of restricting a clustering tree to a subset of genes, so we must re-cluster.</span><br>selectTree = hclust(as.dist(selectTOM), method = <span class="hljs-string">&quot;average&quot;</span>)<br>selectColors = moduleColors[<span class="hljs-keyword">select</span>];<br><span class="hljs-comment"># Open a graphical window</span><br>sizeGrWindow(<span class="hljs-number">9</span>,<span class="hljs-number">9</span>)<br><span class="hljs-comment"># Taking the dissimilarity to a power, say 10, makes the plot more informative by effectively changing</span><br><span class="hljs-comment"># the color palette; setting the diagonal to NA also improves the clarity of the plot</span><br>plotDiss = selectTOM^<span class="hljs-number">7</span>;<br>diag(plotDiss) = NA;<br>png(<span class="hljs-string">&quot;step7-Network-heatmap.png&quot;</span>,width = <span class="hljs-number">800</span>,height = <span class="hljs-number">600</span>)<br>TOMplot(plotDiss, selectTree, selectColors, main = <span class="hljs-string">&quot;Network heatmap plot, selected genes&quot;</span>)<br>dev.off()<br><br><span class="hljs-comment"># ###最后画模块和性状的关系  ---------------------------------------------------------</span><br><span class="hljs-comment">##性状</span><br><span class="hljs-comment"># Recalculate module eigengenes</span><br>MEs = moduleEigengenes(datExpr<span class="hljs-number">0</span>, moduleColors)$eigengenes<br><span class="hljs-comment">## 只有连续型性状才能只有计算</span><br><span class="hljs-comment">## 这里把是否属 Luminal 表型这个变量0,1进行数值化</span><br><span class="hljs-comment"># design=model.matrix(~0+ datTraits$HH)</span><br><span class="hljs-comment"># colnames(design)=levels(datTraits$HH)</span><br>Luminal = as.data.frame(design[,<span class="hljs-number">2</span>]);<br>names(Luminal) = <span class="hljs-string">&quot;Luminal&quot;</span><br><span class="hljs-comment"># Add the weight to existing module eigengenes</span><br>MET = orderMEs(cbind(MEs, Luminal))<br><span class="hljs-comment"># Plot the relationships among the eigengenes and the trait</span><br>sizeGrWindow(<span class="hljs-number">5</span>,<span class="hljs-number">7.5</span>);<br><br>par(cex = <span class="hljs-number">0</span>.<span class="hljs-number">9</span>)<br>png(<span class="hljs-string">&quot;step7-Eigengene-dendrogram.png&quot;</span>,width = <span class="hljs-number">800</span>,height = <span class="hljs-number">600</span>)<br>plotEigengeneNetworks(MET, <span class="hljs-string">&quot;&quot;</span>, marDendro = c(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>), marHeatmap = c(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>), cex.lab = <span class="hljs-number">0</span>.<span class="hljs-number">8</span>, xLabelsAngle<br>                      = <span class="hljs-number">90</span>)<br>dev.off()<br><br><span class="hljs-comment"># Plot the dendrogram</span><br>sizeGrWindow(<span class="hljs-number">6</span>,<span class="hljs-number">6</span>);<br>par(cex = <span class="hljs-number">1.0</span>)<br><span class="hljs-comment">## 模块的进化树</span><br>png(<span class="hljs-string">&quot;step7-Eigengene-dendrogram-hclust.png&quot;</span>,width = <span class="hljs-number">800</span>,height = <span class="hljs-number">600</span>)<br>plotEigengeneNetworks(MET, <span class="hljs-string">&quot;Eigengene dendrogram&quot;</span>, marDendro = c(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>),<br>                      plotHeatmaps = FALSE)<br>dev.off()<br><span class="hljs-comment"># Plot the heatmap matrix (note: this plot will overwrite the dendrogram plot)</span><br>par(cex = <span class="hljs-number">1.0</span>)<br><span class="hljs-comment">## 性状与模块热</span><br><br>png(<span class="hljs-string">&quot;step7-Eigengene-adjacency-heatmap.png&quot;</span>,width = <span class="hljs-number">800</span>,height = <span class="hljs-number">600</span>)<br>plotEigengeneNetworks(MET, <span class="hljs-string">&quot;Eigengene adjacency heatmap&quot;</span>, marHeatmap = c(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),<br>                      plotDendrograms = FALSE, xLabelsAngle = <span class="hljs-number">90</span>)<br>dev.off()<br><br><br><span class="hljs-comment"># ##### -------------------------------------------------------------------</span><br><span class="hljs-comment">##step8:提取指定模块的基因名</span><br><span class="hljs-comment">## step 8 </span><br><span class="hljs-comment"># 主要是关心具体某个模块内部的基因</span><br><span class="hljs-comment"># Select module</span><br>module = <span class="hljs-string">&quot;blueviolet&quot;</span>;<br><span class="hljs-comment"># Select module probes</span><br>probes = colnames(datExpr<span class="hljs-number">0</span>) <br>inModule = (moduleColors==module);<br>modProbes = probes[inModule]; <br>head(modProbes)<br><br><span class="hljs-comment"># 如果使用WGCNA包自带的热图就很丑。</span><br>which.module=<span class="hljs-string">&quot;blueviolet&quot;</span>;<br>dat=datExpr<span class="hljs-number">0</span>[,moduleColors==which.module ] <br>plotMat(t(scale(dat)),nrgcols=<span class="hljs-number">30</span>,rlabels=T,<br>        clabels=T,rcols=which.module,<br>        title=which.module )<br>datExpr<span class="hljs-number">0</span>[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br>dat=t(datExpr<span class="hljs-number">0</span>[,moduleColors==which.module ] )<br>library(pheatmap)<br>pheatmap(dat ,show_colnames =F,show_rownames = F) <br>n=t(scale(t(<span class="hljs-keyword">log</span>(dat+<span class="hljs-number">1</span>)))) <span class="hljs-comment"># &#x27;scale&#x27;可以对log-ratio数值进行归一化</span><br>n[n&gt;<span class="hljs-number">2</span>]=<span class="hljs-number">2</span> <br>n[n&lt; -<span class="hljs-number">2</span>]= -<span class="hljs-number">2</span><br>n[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br>pheatmap(n,show_colnames =F,show_rownames = F)<br>group_list=datTraits$HH<br>ac=data.frame(g=group_list)<br>rownames(ac)=colnames(n) <br>pheatmap(n,show_colnames =F,show_rownames = F,<br>         annotation_col=ac )<br><span class="hljs-comment"># 可以很清晰的看到，所有的形状相关的模块基因</span><br><span class="hljs-comment"># 其实未必就不是差异表达基因。</span><br><br><span class="hljs-comment"># -- ----------------------------------------------------------------------</span><br><br><span class="hljs-comment"># Step9: 模块的导出</span><br><span class="hljs-comment"># 主要模块里面的基因直接的相互作用关系信息可以导出到cytoscape,VisANT等网络可视化软件。</span><br><br><span class="hljs-comment"># -- ----------------------------------------------------------------------</span><br><br><span class="hljs-comment"># Recalculate topological overlap</span><br>TOM = TOMsimilarityFromExpr(datExpr<span class="hljs-number">0</span>, power = <span class="hljs-number">5</span>); <br><span class="hljs-comment"># Select module</span><br>module = <span class="hljs-string">&quot;blueviolet&quot;</span>;<br><span class="hljs-comment"># Select module probes</span><br>probes = colnames(datExpr) <span class="hljs-comment">## 我们例子里面的probe就是基因名</span><br>inModule = (moduleColors==module);<br>modProbes = probes[inModule]; <br><span class="hljs-comment">## 也是提取指定模块的基因名</span><br><span class="hljs-comment"># Select the corresponding Topological Overlap</span><br>modTOM = TOM[inModule, inModule];<br>dimnames(modTOM) = list(modProbes, modProbes)<br><span class="hljs-comment">## 模块对应的基因关系矩阵 </span><br>首先是导出到VisANT<br><br>vis = exportNetworkToVisANT(modTOM,<br>                            file = paste(<span class="hljs-string">&quot;VisANTInput-&quot;</span>, module, <span class="hljs-string">&quot;.txt&quot;</span>, sep=<span class="hljs-string">&quot;&quot;</span>),<br>                            weighted = TRUE,<br>                            threshold = <span class="hljs-number">0</span>)<br>然后是导出到cytoscape<br><br>cyt = exportNetworkToCytoscape(<br>  modTOM,<br>  edgeFile = paste(<span class="hljs-string">&quot;CytoscapeInput-edges-&quot;</span>, paste(module, collapse=<span class="hljs-string">&quot;-&quot;</span>), <span class="hljs-string">&quot;.txt&quot;</span>, sep=<span class="hljs-string">&quot;&quot;</span>),<br>  nodeFile = paste(<span class="hljs-string">&quot;CytoscapeInput-nodes-&quot;</span>, paste(module, collapse=<span class="hljs-string">&quot;-&quot;</span>), <span class="hljs-string">&quot;.txt&quot;</span>, sep=<span class="hljs-string">&quot;&quot;</span>),<br>  weighted = TRUE,<br>  threshold = <span class="hljs-number">0</span>.<span class="hljs-number">02</span>,<br>  nodeNames = modProbes, <br>  nodeAttr = moduleColors[inModule]<br>);<br><span class="hljs-comment">#如果模块包含的基因太多，网络太复杂，还可以进行筛选，比如：</span><br><br>nTop = <span class="hljs-number">30</span>;<br>IMConn = softConnectivity(datExpr[, modProbes]);<br>top = (rank(-IMConn) &lt;= nTop)<br>filter &lt;- modTOM[top, top]<br></code></pre></td></tr></table></figure></li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">Error1<br>net = blockwiseModules<span class="hljs-params">(datExpr0, <span class="hljs-attr">power</span> = 5,</span><br><span class="hljs-params">                       <span class="hljs-attr">TOMType</span> = &quot;unsigned&quot;, <span class="hljs-attr">minModuleSize</span> = 30,</span><br><span class="hljs-params">                       <span class="hljs-attr">reassignThreshold</span> = 0, <span class="hljs-attr">mergeCutHeight</span> = 0.25,</span><br><span class="hljs-params">                       <span class="hljs-attr">numericLabels</span> = TRUE, <span class="hljs-attr">pamRespectsDendro</span> = FALSE,</span><br><span class="hljs-params">                       <span class="hljs-attr">saveTOMs</span> = TRUE,<span class="hljs-attr">loadTOM</span> =TRUE,</span><br><span class="hljs-params">                       <span class="hljs-attr">saveTOMFileBase</span> = &quot;TOM&quot;,</span><br><span class="hljs-params">                       <span class="hljs-attr">verbose</span> = 3)</span><br>Error in <span class="hljs-params">(new(&quot;standardGeneric&quot;, .<span class="hljs-attr">Data</span> = function (x, <span class="hljs-attr">y</span> = NULL, <span class="hljs-attr">use</span> = &quot;everything&quot;,  :  </span><br><span class="hljs-params">  参数没有用(weights.<span class="hljs-attr">x</span> = NULL, weights.<span class="hljs-attr">y</span> = NULL, <span class="hljs-attr">cosine</span> = FALSE)</span><br>                                                   <br> WGCNA包与其他函数冲突导致的；<br>输入<br>cor &lt;- WGCNA:<span class="hljs-function">:cor</span>                                             <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>bioinformation</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2022/03/29/test/"/>
    <url>/2022/03/29/test/</url>
    
    <content type="html"><![CDATA[<p>测试图片</p><img src="/2022/03/29/test/download.jpg" class="" title="This is an example image"><p>git branch source<br>git branch<br>git checkout source<br>git push origin source:source</p><p>希望没有报错</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS3</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello hexo</title>
    <link href="/2022/03/29/hello-hexo/"/>
    <url>/2022/03/29/hello-hexo/</url>
    
    <content type="html"><![CDATA[<p>参考<br><a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E5%88%86%E7%B1%BB%E9%A1%B5">https://fluid-dev.github.io/hexo-fluid-docs/guide/#%E5%88%86%E7%B1%BB%E9%A1%B5</a><br><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>官网下载最新版<br><a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br>最后安装好之后,打开命令提示符，输入node -v和npm -v，出现版本号就成功了。</p><h3 id="2-添加国内镜像源"><a href="#2-添加国内镜像源" class="headerlink" title="2.添加国内镜像源"></a>2.添加国内镜像源</h3><p>如果没有梯子的话，可以使用阿里的国内镜像进行加速。<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3><p>输入npm install -g hexo-cli  安装hexo<br>输入 hexo -h 检查是否安装成功</p><h3 id="4-新建文件夹blog"><a href="#4-新建文件夹blog" class="headerlink" title="4.新建文件夹blog"></a>4.新建文件夹blog</h3><p>进入我们新建的文件夹，初始化文件夹 hexo init</p><img src="/2022/03/29/hello-hexo/one.png" class="" title="This is an example image"><p>我们会得到相应的hexo搭建博客的文件：</p><img src="/2022/03/29/hello-hexo/two.png" class="" title="This is an example image"><h3 id="5-新建博客"><a href="#5-新建博客" class="headerlink" title="5.新建博客"></a>5.新建博客</h3><p>hexo new post “your blog name”<br>打开文件夹的source&#x2F;_posts &#x2F; 里面包含自己的博客的md文件</p><h3 id="6-生成博客静态网址"><a href="#6-生成博客静态网址" class="headerlink" title="6.生成博客静态网址"></a>6.生成博客静态网址</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g </span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><img src="/2022/03/29/hello-hexo/three.png" class="" title="This is an example image"><img src="/2022/03/29/hello-hexo/four.png" class="" title="This is an example image"><p>输入网址就可以看到自己的博客了</p><h3 id="7-博客的主题修改"><a href="#7-博客的主题修改" class="headerlink" title="7.博客的主题修改"></a>7.博客的主题修改</h3><p>搜索自己喜欢的主题，将主题下载到blog&#x2F;themes 文件夹下。并将文件名修改为主题名。<br>下面以fluid的主题为例：<br>最新版本下载地址为：<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">https://github.com/fluid-dev/hexo-theme-fluid/releases</a><br>下载后解压，并重命名为fluid。<br>在hexo&#x2F;blog&#x2F;_config.yml 修改自己的主题<br>#Extensions<br>##Plugins: <a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a><br>##Themes: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>theme: fluid</p><p>查看博客能否生成：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>此时博客的样子：</p><img src="/2022/03/29/hello-hexo/five.png" class="" title="This is an example image"><h3 id="8-个性化博客主题"><a href="#8-个性化博客主题" class="headerlink" title="8.个性化博客主题"></a>8.个性化博客主题</h3><h4 id="8-1写文章的时候生成文件夹保存图片"><a href="#8-1写文章的时候生成文件夹保存图片" class="headerlink" title="8.1写文章的时候生成文件夹保存图片"></a>8.1写文章的时候生成文件夹保存图片</h4><p>将_config.yml里面的post_asset_folder改为true。<br>post_asset_folder: true</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> <span class="hljs-string">&quot;test&quot;</span><br></code></pre></td></tr></table></figure><img src="/2022/03/29/hello-hexo/six.png" class="" title="This is an example image"><p>我们可以下载一张图片放入test文件夹里面，如何在文中引用，请参照<a href="https://hexo.io/zh-cn/docs/asset-folders.html">https://hexo.io/zh-cn/docs/asset-folders.html</a><br>在test.md中加入下载的图片其中一种方法如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-03-29 15:23:35</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">测试图片</span><br>&#123;<span class="hljs-string">%</span> <span class="hljs-string">asset_img</span> <span class="hljs-string">download.jpg</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">example</span> <span class="hljs-string">image</span> <span class="hljs-string">%</span>&#125;<br></code></pre></td></tr></table></figure><p>提交修改后再次打开我们的博客可以看到：</p><h4 id="8-2文章在首页的封面图"><a href="#8-2文章在首页的封面图" class="headerlink" title="8.2文章在首页的封面图"></a>8.2文章在首页的封面图</h4><img src="/2022/03/29/hello-hexo/eight.png" class="" title="This is an example image"><p>设置方式如下：在文章中加上index_img<br>并且将图片保存在&#x2F;themes&#x2F;fluid&#x2F;source&#x2F;img中,在文章中只需要指定在img中就可以。也可以使用外链 Url 的绝对路径。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-03-29 15:23:35</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/download.jpg</span> <br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h4 id="8-3-文章顶部放大图："><a href="#8-3-文章顶部放大图：" class="headerlink" title="8.3 文章顶部放大图："></a>8.3 文章顶部放大图：</h4><p>默认显示主题配置中的 post.banner_img，如需要设置单个文章的 Banner，在 文档中指定 banner_img 属性。图片仍然放置在&#x2F;themes&#x2F;fluid&#x2F;source&#x2F;img</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post_banner.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h4 id="8-4-添加tag-categories"><a href="#8-4-添加tag-categories" class="headerlink" title="8.4 添加tag  categories"></a>8.4 添加tag  categories</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: test<br>date: 2022<span class="hljs-string">-03</span><span class="hljs-string">-29</span> 15:23:35<br>index_img: /img/download.jpg <br>banner_img: /img/download.jpg <br>categories:<br>- bioinformation<br><span class="hljs-keyword">tags:</span><br>- software<br></code></pre></td></tr></table></figure><h3 id="9-博客与git-hub-链接，并且发布到GitHub上"><a href="#9-博客与git-hub-链接，并且发布到GitHub上" class="headerlink" title="9.博客与git hub 链接，并且发布到GitHub上"></a>9.博客与git hub 链接，并且发布到GitHub上</h3><p>创建自己的GitHub账号，登陆后新建仓库命名为lihm1.github.io<br>在仓库中新建文件index.html，里面随便写点内容，<br>然后打开上方的setting,找到pages，我们可以看到自己的网址</p><img src="/2022/03/29/hello-hexo/nine.png" class="" title="This is an example image"><p>发布到GitHub添加自己的github的地址以及自己的博客存在什么分支<br>安装hexo-deployer-git<br>npm install hexo-deployer-git –save<br>修改_config.yml的内容为自己的GitHub地址<br>deploy:<br>  type: git<br>  repository: <a href="https://github.com/lihm1/lihm1.github.io.git">https://github.com/lihm1/lihm1.github.io.git</a><br>  branch: master</p><p>将内容更新后上传到github<br>hexo g<br>hexo d<br>会弹出页面让登录github并且输入密码。我们再次打开自己的github就可以看到自己的仓库已经被更新。</p><h3 id="10-博客源代码的保留"><a href="#10-博客源代码的保留" class="headerlink" title="10.博客源代码的保留"></a>10.博客源代码的保留</h3><p>github创建一个分支，将自己的源码保存在分支中，以后换电脑想要更新博客的时候可以使用。<br>我们可以先将github上的博客的仓库克隆下来<br>git clone <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#x6d;</a>:lihm1&#x2F;lihm1.github.io.git<br>进入本地的lihm1.github.io.git文件夹，创建分支source<br>git branch source<br>git branch<br>切换到分支source<br>git checkout source<br>我们可以在本地先把lihm1.github.io.git 文件全部删掉，然后将开始新建的blog文件夹的内容复制过来。后面将修改内容以及创建的分支push 到远程仓库。<br>git add .<br>git commit -m “hexo”<br>git push orgin source:source<br>后面如果换电脑，我们可以先从github上面clone下来source分支仓库，最好设置source为默认的仓库，在setting里面可以设置。这样code的代码就是source的。<br>下载下来后我们需要，然后安装、初始化hexo，重新设置hexo环境。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo<br>npm <span class="hljs-keyword">install</span> hexo-deployer-git -save<br></code></pre></td></tr></table></figure><p>然后hexo s,便可以看到自己的博客了，如果更新了内容并且想提交到github上，与原来是一样的操作参考9.发布到GitHub的内容。</p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
